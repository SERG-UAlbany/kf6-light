{"version":3,"sources":["store/api.js","Account/Login.js","Account/SignUp.js","store/globalsReducer.js","CommunityManager/CommunityManager.js","TopNavBar/TopNavbar.js","store/dialogReducer.js","store/kftag.service.js","store/notifier.js","store/noteReducer.js","components/dialog/Dialog.js","components/editor/MCEditor.js","components/attachmentCollapse/AttachPanel.js","store/scaffoldReducer.js","components/scaffold/scaffold.service.js","components/scaffold/ScaffoldSelect.js","components/attachmentArea/AttachArea.js","components/writeTab/WriteTab.js","components/historyTab/History.js","components/propertiesTab/Properties.js","components/authorSelect/AuthorSelect.js","components/authorsTab/AuthorTab.js","components/note/Note.js","components/drawDialog/DrawDialog.js","components/dialogHandler/DialogHandler.js","components/NoteContent/NoteContent.js","store/userReducer.js","components/Author/Author.js","View/View.js","components/newNote/NewNote.js","Account/ChangePassword.js","components/test/TestComponent.js","App.js","store/store.js","serviceWorker.js","index.js"],"names":["url","apiUrl","setToken","token","axios","defaults","headers","common","sessionStorage","getItem","getCommunity","communityId","get","getLinks","objectId","direction","type","a","links","data","filter","each","postLink","fromId","toId","post","from","to","deleteLink","linkId","delete","getObject","putObject","object","put","postAttachment","authorId","newobj","title","authors","status","permission","version","getCommunityAuthors","getRecords","contribId","uploadFile","file","onProgress","formData","FormData","append","onUploadProgress","Login","state","userName","password","handleChange","bind","handleSubmit","e","target","name","value","this","setState","preventDefault","console","log","Axios","then","response","setItem","props","history","push","catch","error","Container","className","Col","Form","onSubmit","FormGroup","Label","htmlFor","Input","id","placeholder","onChange","Button","Component","SignUp","firstName","lastName","email","registrationKey","message","alert","class","setCommunity","createAction","setCommunityId","setViewId","setAuthor","setView","dateFormatOptions","year","month","day","hour","minute","second","hour12","initState","viewId","contextId","author","view","community","globalsReducer","createReducer","action","payload","rootContextId","fetchAuthor","dispatch","getAuthor","res","fetchView","fetchCommunity","CommunityManager","myRegistrations","config","Authorization","communitites","welcomeId","userId","registrations","registerUrl","result","window","location","reload","communityData","myCommunity","obj","myState","viewUrl","_id","pathname","map","Row","key","_community","variant","onClick","enterCommunity","mapDispatchToProps","connect","ownProps","TopNavbar","loggedIn","myViews","viewTitle","removeItem","n","length","test","persist","Navbar","bg","fixed","Brand","href","Nav","Link","logout","openDialog","closeDialog","openDrawDialog","closeDrawDialog","focusDialog","openAttachPanel","closeAttachPanel","dialogCounter","dialogReducer","dialogs","drawTool","focused","attachPanel","dlgs","dlg","zIndex","createScaffoldStartTag","isTemplate","tag","createScaffoldEndTag","createReferenceTag","contId","text","preProcess","body","toConnections","fromConnections","doc","jq","$","supportStart","find","addClass","i","elem","startsWith","hasClass","ref","conn","innerHTML","_from","supportEnd","references","_to","html","postProcess","contributionId","handler","endtags","supportLinksIds","supportStarts","supportEnds","toCreate","supportStartsIds","supportId","split","includes","link","oldId","newId","toDeleteSupports","referenceLinksIds","kfReferences","kfreferenceIds","referenceId","toDeleteReferences","Promise","all","notifConfig","insert","container","animationIn","animationOut","dismiss","duration","addNotification","notif","store","addNote","removeNote","editNote","addDrawing","removeDrawing","editSvg","addAttachment","removeAttachment","setAttachments","setWordCount","setLinks","setRecords","removeContribAuthor","addContribAuthor","noteReducer","drawing","attachments","notes","note","Object","assign","noteId","svg","attachment","att","attId","forEach","wordCount","wc","contrib","fromLinks","toLinks","records","auth","newNote","mode","group","_groupMembers","newN","contextMode","content","undefined","buildson","langInNote","docId","myself","coauthors","ca","createdBy","docShared","text4search","createNote","api","x","y","confirmButton","fetchAttachments","link_atts","promises","attach","fetchLinks","openContribution","getState","noteBody","dialog_style","display","Dialog","style","default","width","height","onMouseDown","dragHandleClassName","bounds","Card","Header","alignItems","onClose","size","marginLeft","Body","overflow","children","Footer","onConfirm","MCEditor","apiKey","init","setup","editor","onEditorSetup","content_css","menubar","statusbar","plugins","external_plugins","toolbar","onEditorChange","React","AttachPanel","useSelector","globals","useDispatch","useState","progress","setProgress","handleClose","onFileSelect","fileList","files","Array","indexOf","_URL","URL","webkitURL","img","document","createElement","onload","naturalWidth","naturalHeight","createAttachment","src","createObjectURL","isImage","attachRes","uploadRes","filename","tmpFilename","newAttachment","inlineAttach","data_mce_src","onNewInlineAttach","progressEvent","percentCompleted","Math","round","loaded","total","Modal","show","onHide","closeButton","Title","File","color","FileDrop","onFrameDragEnter","event","onFrameDragLeave","onFrameDrop","onDragOver","onDragLeave","onDrop","ProgressBar","now","requestScaffold","receiveScaffold","scaffoldReducer","isFetching","items","fetched","addHyphen","initText","supportContentId","Date","getTime","toString","ScaffoldSelect","scaffoldSelected","scaffoldId","support","scaffold","addhyphen","initialText","scaffold_text","tagCreator","scaffoldService","onScaffoldSelected","selected","initVal","onSelectChange","fetchScaffolds","scaffolds","options","supports","md","Group","controlId","Control","as","scaffold_promise","values","val","el","AttachArea","selectedImgs","setSelectedImgs","deleteAttachment","onNewAttachClick","getElementById","getElementsByClassName","tagName","getAttribute","classList","cls_name","disabled","serverUrl","imgs","alt","downloadUrl","download","WriteTab","onNewAttachmentClick","inline","History","reduce","acc","read","edit","record","date","Properties","onPermissionChange","evt","checked","contribution","riseabove","makeRiseAbove","AuthorSelect","select_options","entries","label","selectedOption","setSelectedOption","isClearable","onAuthorSelected","AuthorTab","users","communityAuthors","idx","cursor","removeAuthor","Note","onDrawingToolOpen","onNoteChange","onTabSelected","prevProps","prevState","snapshot","insertContent","addSupport","wordcount","getCount","labels","numwords","scaffoldWordCount","onDrawButton","editSvgDialog","selection","getContent","contentTag","dom","setCursorLocation","tab","fetchRecords","formatter","Intl","DateTimeFormat","format","modified","Tabs","defaultActiveKey","transition","onSelect","Tab","eventKey","dangerouslySetInnerHTML","__html","timestamp","DrawDialog","onLoad","getIframeRef","wnd1","iframe_ref","contentWindow","svgCanvas","current_drawing_","all_layers","wnd2","widd","getBBox","heig","svgElem_","setAttribute","childNodes","selectAllInCurrentLayer","groupSelectedElements","alignSelectedElements","ungroupSelectedElement","clearSelection","setResolution","getSvgString","canvas","ctx","getContext","btoa","drawImage","p","toDataURL","frame","setSvgString","DialogHandler","onDialogClose","useCallback","onDialogConfirm","dialogId","onFocusDialog","dlgId","onCloseDrawDialog","onConfirmDrawDialog","elt","NoteContent","noteList","addView","visible","noteContnetList","query","setTimeout","Alert","isOpen","English","index","substring","closeNote","addUser","addAuthors","userReducer","fetchAuthors","Author","authorName","authorUrl","filteredObj","_","require","View","myCommunityId","myTempTo","hierarchyNote","noteData1","noteContnetNew","handleChangeView","noteArray","pop","filterNotes","filteredResults","filteredData","handleInputChange","viewLinks","toLowerCase","element","scaffoldTitle","scaffoldsTitle","handleFilter","buildOn","myCommunities","views","showView","showCommunity","showContribution","showNote","hNotes","showRiseAbove","showModel","showNoteContent","noteData","handleSubmitView","onCloseDialog","showContent","viewNotesUrl","noteUrl","sortedLinks","sortBy","reverse","searchUrl","l","temporaryTo","addViewUrl","isChecked","viewObj","handleShow","sm","xs","DropdownButton","drop","Dropdown","Item","newView","newRiseAbove","created","subObj","j","fontSize","varient","changeView","riseAboveTitle","NewNote","useEffect","marginTop","ChangePassword","oldPassword","newPassword","changePasswdUrl","TestComponent","App","exact","path","component","configureStore","reducer","devTools","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.25d5049d.chunk.js","sourcesContent":["import axios from 'axios';\n\n// export const url = 'https://kf6.ikit.org';\nexport const url = 'https://kf6-stage.ikit.org';\n// export const url = \"http://localhost:9000\";\nexport const apiUrl = `${url}/api`;\n\n\nexport function setToken(token) {\n    axios.defaults.headers.common['Authorization'] =\n        `Bearer ${token}`;\n}\n\nexport const removeToken = () => {\n    delete axios.defaults.headers.common.Authorization\n}\n\n\nconst token = sessionStorage.getItem('token');\nif (token){\n    setToken(token)\n}\n\n//Contribution\nexport const postContribution = (communityId, obj) => {\n    return axios.post(`${apiUrl}/contributions/${communityId}`, obj);//, {mode: 'cors'});\n}\n\n//Community\nexport const getCommunity = (communityId) => {\n    return axios.get(`${apiUrl}/communities/${communityId}`);//, {mode: 'cors'});\n}\n\n//Links\nexport const getLinks = async (objectId, direction, type) => {\n    let links = await axios.get(`${apiUrl}/links/${direction}/${objectId}`);\n    links = links.data;\n    if (type) {\n        links = links.filter(function (each) {\n            return each.type === type;\n        });\n    }\n    return links\n}\n\nexport const postLink = async (fromId, toId, type, data) => {\n    return (await axios.post(`${apiUrl}/links`, {from: fromId, to: toId, type:type, data:data})).data\n}\n\nexport const deleteLink = async (linkId) => {\n    return (await axios.delete(`${apiUrl}/links/${linkId}`).data)\n}\n\n//Object\nexport const getObject = (objectId) => {\n    return axios.get(`${apiUrl}/objects/${objectId}`);\n}\n\nexport const putObject = async (object, communityId, objectId) => {\n    return (await axios.put(`${apiUrl}/objects/${communityId}/${objectId}`, object)).data\n}\n\n//Record\nexport const read = (communityId, objectId) => {\n    return axios.post(`${apiUrl}/records/read/${communityId}/${objectId}`)\n}\n\nexport const postAttachment = (communityId, authorId) => {\n    var newobj = {\n        communityId: communityId,\n        type: 'Attachment',\n        title: 'an Attachment',\n        authors: [authorId],\n        status: 'unsaved',\n        permission: 'protected',\n        data: {\n            version: 0\n        }\n    };\n    return axios.post(`${apiUrl}/contributions/${communityId}`, newobj)\n}\n\n//Author\nexport const getAuthor = (communityId) => {\n    return axios.get(`${apiUrl}/authors/${communityId}/me`)\n}\nexport const getCommunityAuthors = async (communityId) => {\n    return (await axios.get(`${apiUrl}/communities/${communityId}/authors`)).data\n}\n\n//Records\nexport const getRecords = async (contribId) => {\n    return (await axios.get(`${apiUrl}/records/object/${contribId}`)).data\n}\n\nexport const uploadFile = (file, onProgress) => {\n    var formData = new FormData();\n    formData.append(\"file\", file);\n    return axios.post(`${apiUrl}/upload`, formData, {\n        headers: {\n            'Content-Type': 'multipart/form-data',\n            // ...config.headers\n        },\n        onUploadProgress: onProgress,\n    })\n}\n\n// export default {url, apiUrl, postContribution, getCommunity,\n//                 getLinks, getObject, createAttachment,\n//                 getAuthor, uploadFile, putObject,\n//                 postLink, deleteLink, getCommunityAuthors,\n//                 getRecords, read\n//                }\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Axios from 'axios';\nimport {Container, Col, Form, FormGroup, Label, Input, Button} from 'reactstrap';\nimport {url, setToken} from '../store/api.js'\n\nclass Login extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            userName: '',\n            password: ''\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(e) {\n        let target = e.target;\n        let name = target.name;\n        let value = target.value;\n\n        this.setState({\n          [name]: value\n        });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n\n        console.log('The form was submitted with:');\n        console.log(this.state);\n\n        //LOGIN RETURNS TOKEN\n        Axios.post(\n            `${url}/auth/local`,\n            this.state)\n            .then((response)=>{\n                console.log(response.data.token);\n                this.token= response.data.token;\n\n                //SET TOKEN\n                sessionStorage.setItem('token',this.token);\n                setToken(this.token)\n                //NAVIGATE TO COMMUNITY MANAGER\n                this.props.history.push(\"/community-manager\");\n            })\n            .catch((error)=>{\n                // if(error.message){\n                //     console.log(error);\n                //     alert(\"Please enter Valid username and password\");\n                // }\n            }\n\n            );\n    }\n\n    render() {\n        return (\n            <Container>\n            <div className=\"mrg-4-top\">\n                <Col>\n                    <h3>Login</h3>\n                </Col>\n                <Form onSubmit={this.handleSubmit} className=\"form\">\n                <Col>\n                <FormGroup>\n                    <Label htmlFor=\"userName\">Username</Label>\n                    <Input type=\"text\" id=\"userName\" placeholder=\"Enter Username\" name=\"userName\" value={this.state.userName} onChange={this.handleChange} />\n                </FormGroup>\n                </Col>\n                <Col>\n                <FormGroup>\n                    <Label htmlFor=\"password\">Password</Label>\n                    <Input type=\"password\" id=\"password\" placeholder=\"Enter Password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                </FormGroup>\n                </Col>\n                <Col className=\"mrg-1-top\">\n                    <Button>Login</Button>\n                </Col>\n                <Col className=\"mrg-1-top\">\n                    <Link to=\"/signup\">If you don't have an account, please SignUp</Link>\n                </Col>\n                </Form>\n            </div>    \n          </Container>\n        );\n    }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Axios from 'axios';\nimport {Container, Col, Form, FormGroup, Label, Input, Button} from 'reactstrap';\nimport {apiUrl} from '../store/api.js';\n\nclass SignUp extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            firstName:'',\n            lastName:'',\n            email: '',\n            userName: '',\n            password: '',\n            registrationKey: '',\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    //HANDLES THE REALTIME CHANGING VALUE\n    handleChange(e) {\n        let target = e.target;\n        let name = target.name;\n        let value = target.value;\n\n        //NAME IS ATTRIBUTE NAME AND VALUE IS ATTRIBUTE VALUE\n        this.setState({\n          [name]: value\n        });\n    }\n\n    //HANDLE SUBMIT\n    handleSubmit(e) {\n        e.preventDefault();\n\n        console.log('The form was submitted with:');\n        console.log(this.state);\n\n        Axios.post(\n          `${apiUrl}/users`,\n            this.state)\n            .then((response)=>{\n                console.log(response.data.token);\n                this.token= response.data.token;\n                \n                //SET TOKEN\n                sessionStorage.setItem('token',this.token);\n                //NAVIGATE TO COMMUNITY MANAGER TEMP\n                this.props.history.push('/community-manager')\n            })\n            .catch((error)=>{\n                if(error.message){\n                    console.log(error.message);\n                    alert(\"Enter Valid Username and Password\");\n                }\n            });\n    }\n\n    render() {\n        return (\n        <Container>\n        <div className=\"mrg-4-top\">\n          <Col>\n            <h3>SignUp</h3>\n          </Col>\n            <Form onSubmit={this.handleSubmit} class=\"form\">\n              <Col>\n              <FormGroup>\n                <Label htmlFor=\"firstName\">First Name</Label>\n                <Input type=\"text\" id=\"firstName\" placeholder=\"Enter First Name\" name=\"firstName\" value={this.state.firstName} onChange={this.handleChange} />\n              </FormGroup>\n              </Col>\n              <Col>\n              <FormGroup>\n                <Label htmlFor=\"lastName\">Last Name</Label>\n                <Input type=\"text\" id=\"lastName\" placeholder=\"Enter Last Name\" name=\"lastName\" value={this.state.lastName} onChange={this.handleChange} />\n              </FormGroup>\n              </Col>\n              <Col>\n              <FormGroup>\n                <Label htmlFor=\"email\">Email</Label>\n                <Input type=\"email\" id=\"email\" placeholder=\"Enter Email\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\n              </FormGroup>\n              </Col>\n              <Col>\n              <FormGroup>\n                <Label htmlFor=\"userName\">Username</Label>\n                <Input type=\"text\" id=\"userName\" placeholder=\"Enter Username\" name=\"userName\" value={this.state.userName} onChange={this.handleChange} />\n              </FormGroup>\n              </Col>\n              <Col>\n              <FormGroup>\n                <Label htmlFor=\"password\">Password</Label>\n                <Input type=\"password\" id=\"password\" placeholder=\"Enter Password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n              </FormGroup>\n              </Col>\n\n              <Col>\n                  <Button className=\"\">New Account</Button>\n              </Col>\n              <Col className=\"mrg-1-top\">\n                <Link to=\"/\" className=\"FormField__Link\">If you already have an account, please Signin</Link>\n              </Col>\n            </Form>\n          </div>\n          </Container>\n        );\n    }\n}\n\nexport default SignUp;","import { createAction, createReducer } from '@reduxjs/toolkit';\nimport {getAuthor, getObject, getCommunity} from './api.js'\n\nexport const setCommunity = createAction('SET_COMMUNITY')\nexport const setCommunityId = createAction('SET_COMMUNITY_ID')\nexport const setViewId = createAction('SET_VIEW_ID')\nexport const setAuthor = createAction('SET_AUTHOR')\nexport const setView = createAction('SET_VIEW')\nexport const dateFormatOptions = {\n    year: 'numeric', month: 'numeric', day: 'numeric',\n    hour: 'numeric', minute: 'numeric', second: 'numeric',\n    hour12: true\n};\n\nconst initState = {\n    communityId: sessionStorage.getItem('communityId'),\n    viewId: sessionStorage.getItem('viewId'),\n    contextId: '',\n    // communityId: '5e445735d525b936837f7450',\n    author: {},\n    view: null,\n    community: null\n}\n\nexport const globalsReducer = createReducer(initState, {\n    [setCommunityId]: (state, action) => {\n        state.communityId = action.payload\n    },\n    [setViewId]: (state, action) => {\n        state.viewId = action.payload\n    },\n    [setAuthor]: (state, action) => {\n        state.author = action.payload\n    },\n    [setView]: (state, action) => {\n        state.view = action.payload\n    },\n    [setCommunity]: (state, action) => {\n        state.community = action.payload\n        state.contextId = action.payload.rootContextId\n    }\n});\n\nexport const fetchAuthor = (communityId) => {\n    return dispatch => {\n        return getAuthor(communityId).then( res => {\n            dispatch(setAuthor(res.data));\n        })\n    }\n}\n\nexport const fetchView = (viewId) => {\n    return dispatch => {\n        return getObject(viewId).then( res => {\n            dispatch(setView(res.data))\n        })\n    }\n}\n\nexport const fetchCommunity = (communityId) => {\n    return dispatch => {\n        return getCommunity(communityId).then( res => {\n            dispatch(setCommunity(res.data))\n        })\n    }\n}\n","import React, { Component } from 'react';\nimport Axios from 'axios';\nimport {Container, Col, Row, Form, FormGroup, Label, Input} from 'reactstrap';\nimport { Button } from 'react-bootstrap';\nimport {apiUrl} from '../store/api.js'\nimport { connect } from 'react-redux'\nimport { setCommunityId, setViewId } from '../store/globalsReducer.js'\n\nclass CommunityManager extends Component {\n\n    token= sessionStorage.getItem('token');\n    myRegistrations= [];\n\n    //SET HEADER WITH TOKEN BEARER\n    config = {\n        headers: { Authorization: `Bearer ${this.token}` }\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state={\n            communitites: [],\n            password: '',\n            communityId: '',\n            welcomeId: '',\n            userId: sessionStorage.getItem(\"userId\"),\n            token: sessionStorage.getItem(\"token\"),\n            registrations: []\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange = (e) => {\n        let target = e.target;\n        let name = target.name;\n        let value = target.value;\n        console.log(name,value);\n        \n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        console.log(\"FORM\",this.state);\n        \n        //REGISTER NEW COMMUNITY TO AUTHOR\n        var registerUrl= `${apiUrl}/authors`;\n        var data= {\"communityId\": this.state.communityId, \"registrationKey\": this.state.password, \"userId\":this.state.userId};\n        var config = {\n            headers: { Authorization: `Bearer ${this.state.token}` }\n        };\n\n        Axios.post(registerUrl, data, config)\n            .then(\n                result=>{\n                    console.log(\"AUTHOR\", result.data);\n                    window.location.reload();                   \n                }).catch(\n                    error=>{\n                        // alert(error);\n                })\n        \n    }\n\n    componentDidMount(){\n        //GET LIST OF ALL COMMUNITIES\n        Axios.get(`${apiUrl}/communities`)\n        .then(\n            result=>{\n                this.communityData= result.data;\n                console.log(this.communityData);\n                this.setState({\n                    communitites: result.data\n                 })\n            }).catch(\n                error=>{\n                    console.log(\"GET Communities Failed\");\n                    alert(\"GET Communities Failed\");\n                }\n            );\n\n            //GET USER'S REGISTERED COMMUNITIES\n        Axios.get(`${apiUrl}/users/myRegistrations`, this.config)\n            .then(\n                result=>{\n                    console.log(\"registrations\")\n                    console.log(result.data)\n                    this.myRegistrations= result.data; \n                    this.setState({\n                        registrations: result.data\n                    })\n                }).catch(\n                    error=>{\n                        alert(error);\n                    }\n                );\n    }\n\n    enterCommunity(myCommunity){\n        var id= myCommunity.obj.communityId;\n        sessionStorage.setItem('communityId',myCommunity.obj.communityId)\n        this.props.setCommunityId(id)\n        let myState={\n            communityId:id,\n            welcomeId:''\n        } \n\n        //SET HEADER WITH TOKEN BEARER\n        var config = {\n            headers: { Authorization: `Bearer ${this.token}` }\n        };\n\n        //GET USER'S VIEWS\n        var viewUrl= `${apiUrl}/communities/${id}/views`;\n        console.log(viewUrl);\n        \n        Axios.get(viewUrl, config)\n        .then(\n            result=>{\n                // viewId= result.data[0]._id;\n                myState.welcomeId= result.data[0]._id;\n                sessionStorage.setItem('viewId',result.data[0]._id);\n                this.props.setViewId(result.data[0]._id)\n\n                this.props.history.push({pathname: \"/view\", state: myState});\n            }).catch(\n                error=>{\n                    alert(error);\n                });\n        \n    }\n\n    render() {\n        return (\n            <Container>\n                <div className=\"mrg-4-top\">\n                \n                <Container className=\"mrg-2-top\">\n                    <h6>My Knowledge Building Communities</h6>\n                    {this.state.registrations.map((obj, id) => {\n                        return <Row key={id} value={obj.communityId} className=\"mrg-05-top\">\n                            <Col>{obj._community.title}</Col>\n                            <Col><Button variant=\"outline-secondary\" onClick={()=>this.enterCommunity({obj})}>Enter Community</Button></Col>\n                        </Row>\n                    })}\n                </Container>\n\n                <Form onSubmit={this.handleSubmit} className=\"form\">\n                    <Col>\n                    <FormGroup>\n                    <Label>Register Community</Label>\n                        <Input type=\"select\" name=\"communityId\" id=\"communityId\" value={this.state.communityId}  onChange={this.handleChange}>{\n                            this.state.communitites.map((obj) => {\n                                return <option key={obj._id} value={obj._id}>{obj.title}</option>\n                            })\n                        }</Input>\n                    </FormGroup>\n                    <FormGroup>\n                    <Label>Registration Key</Label>\n                        <Input type=\"password\" name=\"password\" placeholder=\"Enter Registration Key\" id=\"password\" value={this.state.password} onChange={this.handleChange}/>\n                    </FormGroup>\n                    </Col>\n                    <Col>\n                        <Button variant=\"secondary\" onClick={this.handleSubmit}>Submit</Button>\n                    </Col>\n                </Form>\n               \n              </div>\n            </Container>);\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n    }\n}\n\nconst mapDispatchToProps = {\n    setCommunityId,\n    setViewId,\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(CommunityManager)\n/* export default CommunityManager; */\n","import React, { Component } from 'react';\nimport { Navbar, Nav, Button } from 'react-bootstrap';\nimport {Col, Form, FormGroup, Input} from 'reactstrap';\nimport { removeToken } from '../store/api.js'\nimport Axios from 'axios';\nimport {apiUrl} from '../store/api.js';\n\nclass TopNavbar extends Component {\n\n  constructor() {\n    super();\n\n    this.state={\n        loggedIn: sessionStorage.getItem('token') ? true: false,\n        userName: null,\n        token : sessionStorage.getItem('token'),\n        myViews : [],\n        viewId : sessionStorage.getItem('viewId') ? sessionStorage.getItem('viewId') : '',\n        viewTitle : sessionStorage.getItem(\"viewTitle\")? sessionStorage.getItem(\"viewTitle\") :'welcome',\n        communityId : sessionStorage.getItem('communityId'),\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount(){\n\n    //SET HEADER WITH TOKEN BEARER\n    var config = {\n      headers: { Authorization: `Bearer ${this.state.token}` }\n    };\n\n    // GET FULL NAME\n    /* HAVE A CONDITION WHEN USER IS LOGGED IN, THEN ONLY IT SHOWS THE NAME */\n    Axios.get(`${apiUrl}/users/me`, config)\n            .then(\n                result=>{\n                    this.setState({\n                        userName: result.data.firstName+ \" \"+ result.data.lastName,\n                     })\n                     \n                     sessionStorage.setItem(\"userId\", result.data._id);\n\n                    }).catch(\n                    error=>{\n                    });\n    \n    //GET USER'S VIEWS\n    if(this.state.communityId){\n      var viewUrl= `${apiUrl}/communities/${this.state.communityId}/views`;\n      \n      Axios.get(viewUrl, config)\n      .then(\n          result=>{\n            this.setState({\n              myViews: result.data\n            })\n          }).catch(\n              error=>{\n                  // alert(error);\n              });\n    }\n    \n  }\n\n    logout(){\n        sessionStorage.removeItem('token');\n        removeToken()\n        var n = sessionStorage.length;\n        while(n--) {\n          var key = sessionStorage.key(n);\n          if(/foo/.test(key)) {\n      sessionStorage.removeItem(key);\n  }  \n}\n    }\n\n    handleChange(e) {\n      e.persist();\n      let target = e.target;\n      let value = target.value;\n\n      sessionStorage.setItem(\"viewId\", value);\n      \n      this.setState({\n        viewId: value,\n      });\n\n      var config = {\n        headers: { Authorization: `Bearer ${this.state.token}` }\n      };\n\n      var viewUrl= `${apiUrl}/objects/${target.value}`;\n\n      Axios.get(viewUrl, config)\n        .then(\n          result=>{\n            console.log(result.data);\n            \n               this.setState({\n                   viewTitle: result.data.title,\n                })\n                \n                sessionStorage.setItem(\"viewTitle\", result.data.title);\n              \n          }).catch(\n              error=>{\n                  alert(error);\n              });      \n  }\n\n    handleSubmit(e) {\n      e.preventDefault();\n      \n      console.log('The form was submitted with:');\n      console.log(this.state);\n    \n    }\n\n    render() {\n        return (\n            <Navbar bg=\"dark\" variant=\"dark\" fixed=\"top\">\n            <Navbar.Brand href=\"#community-manager\">KF6 Light</Navbar.Brand>\n            {this.state.loggedIn ? \n            (\n              <Nav className=\"mr-auto\">\n              <span className=\"mrg-105-top white\">{this.state.viewTitle}</span>\n              <Form onSubmit={this.handleSubmit} className=\"mrg-1-top\">\n                    <Col>\n                    <FormGroup>\n                    {/* <Label>Select Community</Label> */}\n                        <Input type=\"select\" name=\"viewId\" value={this.state.viewId} onChange={this.handleChange}>{\n                            this.state.myViews.map((obj) => {\n                                return <option key={obj._id} value={obj._id}> {obj.title} </option>\n                            })\n                        }</Input>\n                    </FormGroup>\n                    </Col>\n                </Form>\n            </Nav>\n            ):\n            (\n              <Nav className=\"mr-auto\">\n              <Nav.Link href=\"#signup\">Signup</Nav.Link>\n              <Nav.Link href=\"/\">Login</Nav.Link>\n            </Nav>\n            )}\n            \n            {this.state.loggedIn ? (\n              <>\n                <Nav.Link href=\"#change-password\"><i className=\"fas fa-cog white\"></i></Nav.Link>\n                <span className=\"white\"> {this.state.userName} </span>                \n                <Button variant=\"outline-secondary\" href=\"/\" onClick={this.logout}>Logout</Button>\n              </>\n            ):null}\n\n            </Navbar>\n        );\n    }\n}\n\nexport default TopNavbar;\n","import { createAction, createReducer } from '@reduxjs/toolkit';\n\nexport const openDialog = createAction('OPEN_DIALOG');\nexport const closeDialog = createAction('CLOSE_DIALOG');\nexport const openDrawDialog = createAction('OPEN_DRAW_DIALOG')\nexport const closeDrawDialog = createAction('CLOSE_DRAW_DIALOG')\nexport const focusDialog = createAction('FOCUS_DIALOG')\nexport const openAttachPanel = createAction('OPEN_ATTACH_PANEL')\nexport const closeAttachPanel = createAction('CLOSE_ATTACH_PANEL')\n\nlet dialogCounter= 0\nconst defaultZIndex = 1000\nconst focusedZindex = 1100\n//Dialog content\n// dialog = {id, noteId, title, content, confirmButton, zIndex}\nconst initState = { dialogs: [], drawTool: null, focused: null, attachPanel: {}};\nexport const dialogReducer = createReducer(initState, {\n    // actionCreator.toString() will automatically be called here\n    [openDialog] : (state, action) => {\n        //Unfocus previous focused dialog\n        const dlgs = state.dialogs.map(dlg => {\n            if (dlg.id === state.focused)\n                dlg.zIndex = defaultZIndex\n            return dlg\n        })\n        //Add new dialog\n        state.focused = dialogCounter\n        state.dialogs = [...dlgs, {id: dialogCounter++, zIndex: focusedZindex, ...action.payload}]\n        //Update index of focused\n        // state.dialogs.push({id: dialogCounter++, ...action.payload});\n    },\n\n    // Or, you can reference the .type field:\n    [closeDialog] : (state, action) => {\n        // console.log(state.dialogs)\n        state.dialogs = state.dialogs.filter((dlg) => dlg.id !== action.payload)\n    },\n\n    [openDrawDialog]: (state, action) => {\n        state.drawTool = action.payload;\n    },\n\n    [closeDrawDialog]: (state, action) => {\n        state.drawTool = null;\n    },\n\n    [openAttachPanel]: (state, action) => {\n        state.attachPanel = action.payload;\n    },\n\n    [closeAttachPanel]: (state, action) => {\n        state.attachPanel = {};\n    },\n\n    [focusDialog]: (state, action) => {\n        if (state.focused !== action.payload) {\n            state.dialogs = state.dialogs.map( dlg => {\n                if (dlg.id === state.focused)\n                    dlg.zIndex = defaultZIndex\n                else if (dlg.id === action.payload)\n                    dlg.zIndex = focusedZindex\n                return dlg\n            })\n            state.focused = action.payload\n        }\n    }\n});\n\n","import $ from 'jquery'\nimport {postLink, deleteLink} from './api.js'\n\n//Count words inside scaffold labels\nexport const scaffoldWordCount = (text) => {\n    const doc = '<div>' + text + '</div>';\n    const jq = $(doc); //convert to jquery dom element\n    let labels = jq.find('.kfSupportStartLabel')\n    let numwords = 0;\n    for (let i = 0; i< labels.length; i++){\n        numwords += labels[i].innerHTML.split(' ').length\n    }\n    return numwords\n}\n\nconst createScaffoldStartTag = (title, isTemplate) => {\n    let tag = '';\n    tag = tag + ' '; //important for mce\n    if (!isTemplate) {\n        tag = tag + '<span class=\"kfSupportStartMark\"> &nbsp; </span>';\n    } else {\n        tag = tag + '<span class=\"kfSupportStartMark kfTemplateStartMark\"> &nbsp; </span>';\n    }\n    tag = tag + ' '; //important for mce\n    if (!isTemplate) {\n        tag = tag + '<span class=\"kfSupportStartLabel\">' + title + '</span>';\n    } else {\n        tag = tag + '<span class=\"kfSupportStartLabel kfTemplateStartLabel\">' + title + '</span>';\n    }\n    tag = tag + ' '; //important for mce\n    return tag;\n};\n\nconst createScaffoldEndTag = (isTemplate) => {\n    let tag = '';\n    tag = tag + ' '; //important for mce\n    if (!isTemplate) {\n        tag = tag + '<span class=\"kfSupportEndMark\"> &nbsp; </span>';\n    } else {\n        tag = tag + '<span class=\"kfSupportEndMark kfTemplateEndMark\"> &nbsp; </span>';\n    }\n    tag = tag + ' '; //important for mce\n    return tag;\n};\n\nconst createReferenceTag = (contId, title, authors, text) => {\n    const authorText = '(missing authors)'//TODO $community.makeAuthorStringByIds(authors);\n    let tag = '';\n    if (text && text.length > 0) {\n        tag = tag + '<span class=\"KFReferenceQuote\"><span>\"</span><span class=\"KFReferenceText\">' + text + '</span><span>\"</span></span>';\n    }\n    tag = tag + '<span> (<a href=\"contribution/' + contId + '\" target=\"' + contId + '\">';\n    tag = tag + '<img src=\"/manual_assets/kf4images/icon-note-unread-othr-.gif\">\"' + title + '\"</a>';\n    tag = tag + '<span class=\"KFReferenceAuthor\"> by ' + authorText + '</span>)</span>';\n    tag = tag + '</span>';\n    return tag;\n};\n\nexport const preProcess = (body, toConnections, fromConnections) => {\n    const doc = '<div>' + body + '</div>';\n    const jq = $(doc);\n\n    const supportStart = jq.find('.KFSupportStart')\n    supportStart.addClass('mceNonEditable');\n    for (let i = 0; i < supportStart.length; i++) {\n        const elem = supportStart[i]\n        if (!elem.id.startsWith('supportid_')) {\n            const isTemplate = $(elem).hasClass('KFTemplateStart');\n            const ref = toConnections.filter((conn) => conn._id === elem.id)\n            if (ref.length) {\n                elem.innerHTML =createScaffoldStartTag(ref[0]._from.title, isTemplate);\n            } else {\n                if(toConnections !== 'Annotation'){\n                    elem.innerHTML = createScaffoldStartTag('(missing link)', isTemplate);\n                }\n            }\n        }\n    }\n    const supportEnd = jq.find('.KFSupportEnd')\n    supportEnd.addClass('mceNonEditable');\n    for (let i = 0; i < supportEnd.length; i++) {\n        const elem = supportEnd[i]\n        const isTemplate = $(elem).hasClass('KFTemplateEnd');\n        elem.innerHTML = createScaffoldEndTag(isTemplate);\n    }\n\n    const references = jq.find('.KFReference')\n    references.addClass('mceNonEditable');\n    for (let i = 0; i < references.length; i++) {\n        const elem = supportEnd[i]\n        let ref = fromConnections.filter((conn) => conn._id === elem.id)\n        if (ref.length) {\n            ref = ref[0]\n            let text = '';\n            if (ref.data) {\n                text = ref.data.text;\n            }\n            elem.innerHTML = createReferenceTag(ref.to, ref._to.title, ref._to.authors, text);\n        } else {\n            elem.innerHTML = createReferenceTag('', '(missing link)', '', '');\n        }\n    }\n    return jq.html();\n};\n\nexport const postProcess = async (text, contributionId, toConnections, fromConnections, handler) => {\n    const doc = '<div>' + text + '</div>';\n    const jq = $(doc); //convert to jquery dom element\n    const endtags = {};\n    const supportLinksIds = toConnections.filter((each) => each.type === 'supports')\n          .map((each) => each._id) //get only toConnections of type = supports\n    let supportStarts = jq.find('.KFSupportStart')\n    const supportEnds = jq.find('.KFSupportEnd')\n    const toCreate = []\n    const supportStartsIds = []\n\n    for (let i = 0; i < supportEnds.length; i++) {\n        const elem = supportEnds[i]\n        elem.innerHTML = '';\n        var id = elem.id;\n        endtags[id] = elem;\n    }\n    for (let i = 0; i < supportStarts.length; i++) {\n        const elem = supportStarts[i]\n        let supportId = elem.id;\n        elem.innerHTML = '';\n        if (supportId.startsWith('supportid_')) {\n            supportId = supportId.split('_')[1];\n        }\n        supportStartsIds.push(supportId)\n        if (!supportLinksIds.includes(supportId)) {//Is a new supportLink\n            //promise to create link\n            toCreate.push(postLink(supportId, contributionId, 'supports').then((link) => {\n                //Replace id with id of new created link\n                const oldId = elem.id;\n                const newId = link._id;\n                elem.id = newId;\n                if (endtags[oldId]) {\n                    endtags[oldId].id = newId;\n                }\n            }))\n        }\n    }\n    const toDeleteSupports = supportLinksIds.filter((each) => !supportStartsIds.includes(each))\n          .map((each) => deleteLink(each)) //Select toConnections that no longer appear in the tinymce text\n\n\n    const referenceLinksIds = fromConnections.filter((each) => each.type === 'references').map((each) => each._id) //get only ids of fromConnections of type=references\n    const kfReferences = jq.find('.KFReferenceText') //Get references dom elements\n    const kfreferenceIds = []\n\n    for (var i = 0; i < kfReferences.length; i++) {\n        const elem = kfReferences[i]\n        const data = {text:$(elem).find('.KFReferenceText').html()}\n        elem.innerHTML = '';\n        const referenceId = elem.id;\n        kfreferenceIds.push(referenceId)\n        if (!referenceLinksIds.includes(referenceId)) {//Is a new supportLink\n            //promise to create link\n            toCreate.push(postLink(contributionId, referenceId, 'references', data).then((link) => {\n                //Replace id with id of new created link\n                const oldId = elem.id;\n                const newId = link._id;\n                elem.id = newId;\n                if (endtags[oldId]) {\n                    endtags[oldId].id = newId;\n                }\n            }))\n        }\n    }\n\n    const toDeleteReferences = referenceLinksIds.filter((each) => !kfreferenceIds.includes(each)).map((each) => deleteLink(each)) //Select fromConnections that no longer appear in the tinymce text\n\n    await Promise.all(toDeleteSupports)\n    await Promise.all(toDeleteReferences)\n    await Promise.all(toCreate)\n    return jq\n}\n\n","import { store } from 'react-notifications-component';\n\nconst notifConfig = {\n    type: \"success\",\n    insert: \"top\",\n    container: \"top-right\",\n    animationIn: [\"animated\", \"fadeIn\"],\n    animationOut: [\"animated\", \"fadeOut\"],\n    dismiss: {\n        duration: 5000,\n        // onScreen: true\n    },\n}\nexport const addNotification = ( notif ) => {\n    return store.addNotification({...notifConfig, ...notif});\n}\n\nexport const removeNotification = (notifId) => {\n    store.removeNotification(notifId)\n}\n","import { createAction, createReducer } from '@reduxjs/toolkit';\nimport { openDialog, openDrawDialog, closeDialog } from './dialogReducer.js'\nimport { preProcess, postProcess } from './kftag.service.js'\nimport * as api from './api.js'\nimport { addNotification } from './notifier.js'\nimport { dateFormatOptions } from './globalsReducer.js'\n\nexport const addNote = createAction('ADD_NOTE')\nexport const removeNote = createAction('REMOVE_NOTE')\nexport const editNote = createAction('EDIT_NOTE')\nexport const addDrawing = createAction('ADD_DRAWING')\nexport const removeDrawing = createAction('REMOVE_DRAWING')\nexport const editSvg = createAction('EDIT_SVG')\nexport const addAttachment = createAction('ADD_ATTACHMENT')\nexport const removeAttachment = createAction('REMOVE_ATTACHMENT')\nexport const setAttachments = createAction('SET_ATTACHMENTS')\nexport const setWordCount = createAction('SET_WORDCOUNT')\nexport const setLinks = createAction('SET_CONNECTIONS')\nexport const setRecords = createAction('SET_RECORDS')\nexport const removeContribAuthor = createAction('REMOVE_CONTRIB_AUTHOR')\nexport const addContribAuthor = createAction('ADD_CONTRIB_AUTHOR')\n\n// export const postContribution = createAction('POST_CONTRIBUTION')\n\n// let noteCounter = 0\nconst initState = {drawing: '', attachments: {}}\n\nexport const noteReducer = createReducer(initState, {\n    [addNote]: (notes, action) => {\n        notes[action.payload._id] = action.payload\n    },\n    [removeNote]: (notes, action) => {\n        delete notes[action.payload]\n    },\n    [editNote]: (notes, action) => {\n        let note = notes[action.payload._id];\n        notes[action.payload._id] = Object.assign({}, note, action.payload)\n    },\n    [addDrawing]: (notes, action) => {\n        notes.drawing = action.payload\n    },\n    [removeDrawing]: (notes, action) => {\n        notes.drawing = '';\n    },\n    [editSvg]: (notes, action) => {\n        notes[action.payload.noteId].editSvg = action.payload.svg\n    },\n    [addAttachment]: (state, action) => {\n        let note = state[action.payload.noteId]\n        note.attachments.push(action.payload.attachment._id)\n        state.attachments[action.payload.attachment._id] = action.payload.attachment\n    },\n    [removeAttachment]: (notes, action) => {\n        let note = notes[action.payload.noteId]\n        note.attachments = note.attachments.filter((att) => att.id !== action.payload.attId)\n    },\n    [setAttachments]: (state, action) => {\n        let note = state[action.payload.contribId]\n        note.attachments = action.payload.attachments.map((att)=> att._id)\n        action.payload.attachments.forEach((att) => {\n            state.attachments[att._id] = att\n        })\n    },\n    [setWordCount]: (state, action) => {\n        let note = state[action.payload.contribId]\n        note.wordCount = action.payload.wc\n    },\n    [setLinks]: (state, action) => {\n        let contrib = state[action.payload.contribId]\n        if (action.payload.direction === 'from'){\n            contrib.fromLinks = action.payload.links\n        }else{\n            contrib.toLinks = action.payload.links\n        }\n    },\n    [setRecords]: (state, action) => {\n        let note = state[action.payload.contribId]\n        note.records = action.payload.records\n    },\n    [addContribAuthor]: (state, action) => {\n        let contrib = state[action.payload.contribId]\n        contrib.authors = [...contrib.authors, action.payload.author]\n    },\n    [removeContribAuthor]: (state, action) => {\n        let contrib = state[action.payload.contribId]\n        contrib.authors = contrib.authors.filter((auth) => auth !== action.payload.author)\n    }\n});\n\nconst createNote = (communityId, authorId, contextMode, fromId, content) => {\n    if (!content){ content = ''}\n    if (contextMode && !contextMode.permission){\n        window.alert('invalid mode object')\n        return\n    }\n    let mode = {}\n    if (contextMode && contextMode.permission === 'private'){\n        mode.permission = contextMode.permission;\n        mode.group = contextMode.group;\n        mode._groupMembers = contextMode._groupMembers;\n    } else {\n        mode.permission = 'protected';\n        mode.group = undefined;\n        mode._groupMembers = [];\n    }\n    let title = contextMode && contextMode.title ? contextMode.title : '';\n    let status = contextMode && contextMode.status ? contextMode.status : 'unsaved';\n\n    const newobj = {\n        communityId: communityId,\n        type: 'Note',\n        title: title,\n        /* 6.6 the default title was changed to blank by Christian */\n        authors: [authorId],\n        status: status,\n        permission: mode.permission,\n        group: mode.group,\n        _groupMembers: mode._groupMembers,\n        data: {\n            body: contextMode && contextMode.body ? contextMode.body : ''\n        },\n        buildson: fromId,\n        langInNote: []\n\n    }\n\n    //save google document id, createdBy and coauthors, current doc permission granted\n    if (contextMode && contextMode.docId) {\n        newobj.docId = contextMode.docId;\n        var myself = newobj.authors[0];\n        if (contextMode.coauthors) {\n            var ca = contextMode.coauthors.split(',');\n            for (var i = 0; i < ca.length; i++) {\n                if (ca[i] !== myself) {\n                    newobj.authors.push(ca[i]);\n                }\n            }\n        }\n        if (contextMode.createdBy) {\n            newobj.createdBy = contextMode.createdBy;\n        }\n        newobj.docShared = [myself];\n        newobj.text4search = contextMode.text4search;\n    }\n\n    return newobj\n}\n\nexport const newNote = (view, communityId, authorId) => dispatch => {\n    const mode = {permission: view.permission, group: view.group, _groupMembers: view._groupMembers }\n    const newN = sessionStorage.getItem(\"buildOn\") === null ? createNote(communityId, authorId, mode) : // IF IT'S A BUILDON, THEN CREATE BUILDON LINK\n    {\n            \"authors\" : authorId,\n            \"buildson\" : sessionStorage.getItem(\"buildOn\"),\n            \"communityId\" : communityId,\n            data : {\n                \"body\" : \"\",\n            },\n            \"permission\" : view.permission,\n            \"status\": \"unsaved\",\n            \"title\": \"\",\n            \"type\": \"Note\",\n            \"_groupMembers\": [],\n    };\n    if(newN){sessionStorage.removeItem(\"buildOn\")};\n    return api.postContribution(communityId, newN).then((res) => {        \n        const note = {attachments: [], fromLinks:[], toLinks:[], records: [], ...res.data}\n        const pos = {x: 100, y:100}\n        api.postLink(view._id, note._id, 'contains', pos)\n        \n        //TODO saveContainsLinktoITM x2\n\n        dispatch(addNote(note))\n\n        dispatch(openDialog({title: 'New Note',\n                             confirmButton: 'create',\n                             noteId: note._id,\n                            }))\n    })\n\n}\n\nexport const editSvgDialog = (noteId, svg) => dispatch => {\n    dispatch(editSvg({noteId, svg}))\n    dispatch(openDrawDialog(noteId))\n}\n\nexport const attachmentUploaded = (noteId, attachment, inline, x, y) => dispatch => {\n\n    return api.postLink(noteId, attachment._id, 'attach').then((res) => {\n\n        // TODO dispatch(getLinksFrom(noteId))\n        dispatch(addAttachment({noteId, attachment}))\n\n    });\n}\n\nexport const fetchAttachments = (contribId) => async dispatch => {\n    const link_atts = await api.getLinks(contribId, 'from', 'attach')\n    const promises = link_atts.map((attach) => api.getObject(attach.to))\n    let attachments = await Promise.all(promises)\n    attachments = attachments.map((att) => att.data)\n    dispatch(setAttachments({contribId, attachments}))\n}\n\nexport const postContribution = (contribId, dialogId) => async (dispatch, getState) => {\n    const state = getState()\n    let contrib = state.notes[contribId]\n    contrib = Object.assign({}, contrib)\n    contrib.data = Object.assign({}, contrib.data)\n    if (!contrib.title){\n        addNotification({title: 'Error Saving Note!', type:'danger', message:'Title is required'})\n        return\n    }\n    //TODO sync checking?\n    //TODO status.contribution = 'saving'\n    if (contrib.type === 'Note') {\n        // TODO if isGoogleDoc\n        // const isNewNote = contrib.status === 'unsaved'\n        contrib.status = 'active'\n        const jq = await postProcess(contrib.data.body, contrib._id, [], [])\n        dispatch(fetchLinks(contribId, 'from'))\n        dispatch(fetchLinks(contribId, 'to'))\n\n        const text = jq.html()\n        contrib.data.body = text\n        const newNote = await api.putObject(contrib, contrib.communityId, contrib._id)\n        dispatch(editNote(newNote))\n\n        if (dialogId !== undefined)\n            dispatch(closeDialog(dialogId))\n        addNotification({title: 'Saved!', type:'success', message:'Contribution created!'})\n    }\n}\n\nexport const fetchLinks = (contribId, direction) => async (dispatch) => {\n    const links = await api.getLinks(contribId, direction)\n    dispatch(setLinks({contribId, direction, links}))\n}\n\nexport const fetchRecords = (contribId) => async (dispatch, getState) => {\n    const authors = getState().users\n    const records = await api.getRecords(contribId)\n    const formatter = new Intl.DateTimeFormat('default', dateFormatOptions)\n    records.forEach((record) => {\n        if (authors[record.authorId]){\n            const author =  authors[record.authorId]\n            record['author'] = `${author.firstName} ${author.lastName}`\n        }else{\n            record['author'] = 'NA'\n        }\n        record['date'] = formatter.format(new Date(record.timestamp))\n    })\n    dispatch(setRecords({contribId, records}))\n}\n\nexport const openContribution = (contribId) => async (dispatch, getState) => {\n\n    const [contrib, fromLinks, toLinks] = await Promise.all([api.getObject(contribId),\n                                                            api.getLinks(contribId, 'from'),\n                                                            api.getLinks(contribId, 'to')])\n\n    const note = {attachments: [], fromLinks, toLinks, records: [], ...contrib.data}\n    const noteBody = preProcess(note.data.body, toLinks, fromLinks)\n    note.data.body = noteBody\n    dispatch(addNote(note))\n    dispatch(fetchAttachments(contribId))\n    dispatch(openDialog({title: 'Edit Note',\n                         confirmButton: 'edit',\n                         noteId: note._id,\n                        }))\n\n    if (note.status === 'active'){\n         api.read(note.communityId, note._id)\n    }\n}\n","import React from 'react';\nimport {Rnd} from 'react-rnd';\nimport {Card, Button} from 'react-bootstrap';\nimport './dialog.css';\nconst dialog_style = {\n    zIndex: 999,\n    display: 'flex'\n}\n\nconst Dialog = props => {\n    return (\n            <Rnd\n                className={\"contrib-dialog\"}\n                style={{...dialog_style, ...props.style}}\n                default={{\n                    x: 400,\n                    y: 50,\n                    width: 920,\n                    height: 500,\n                }}\n                onClick={props.onClick}\n                onMouseDown={props.onMouseDown}\n                dragHandleClassName='dlg-card-header'\n                bounds='window'\n            >\n                <Card className='dlg-card'>\n                    <Card.Header className='dlg-card-header py-0' style={{alignItems: 'center', display: 'flex'}}>\n                        <span>{props.title}</span>\n                        <Button onClick={props.onClose} variant='link' size='sm' style={{marginLeft:'auto'}}>x</Button>\n                    </Card.Header>\n                    <Card.Body className='dlg-card-body' style={{overflow: 'scroll'}}>\n                        {props.children}\n                    </Card.Body>\n                    <Card.Footer className=\"dlg-card-footer py-0\">\n                        <Button size='sm' className=\"dlg-confirm-button\"\n                            onClick={props.onConfirm}\n                        >\n                            {props.confirmButton}\n                        </Button>\n                    </Card.Footer>\n                </Card>\n            </Rnd>\n    )\n}\n\nexport default Dialog;\n","import React from 'react';\nimport { Editor } from '@tinymce/tinymce-react';\n/* import './editor.css' */\n\nclass MCEditor extends React.Component {\n\n    render() {\n        return (\n            <div>\n                <Editor\n                    value={this.props.value}\n                    apiKey=\"arg05azt52qbujpnf831szuswhmyhoqute0q48btk5bqigoj\"\n                    init={{\n                        setup: (editor) => {this.props.onEditorSetup(editor)},\n                        content_css: './editor.css',\n                        height: 300,\n                        menubar: false,\n                        statusbar: false,\n                        plugins: [\n                            'advlist autolink lists link image charmap print preview anchor',\n                            'searchreplace visualblocks code fullscreen',\n                            'insertdatetime media table paste code wordcount help'\n                        ],\n                        external_plugins: {\n                            'drawingTool': '/drawing-tool/plugin.min.js'\n                        },\n                        toolbar: 'styleselect | bold italic underline strikethrough | forecolor backcolor bullist numlist | link code | ltr rtl | charmap | drawingTool'\n                    }}\n                    onEditorChange={this.props.onEditorChange}\n                />\n            </div>\n        );\n    }\n}\n\nexport default MCEditor;\n","import React, {useState} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Modal, Button, Form, ProgressBar} from 'react-bootstrap'\nimport { fetchAttachments } from '../../store/noteReducer.js'\nimport { FileDrop } from 'react-file-drop';\nimport './AttachPanel.css'\n\nimport {postAttachment, uploadFile, putObject, postLink} from '../../store/api.js'\n\n//TODO if dropping files is not supported\nconst AttachPanel = props => {\n    const author = useSelector(state => state.globals.author);\n    const dispatch = useDispatch();\n    const [progress, setProgress] = useState(0);\n\n    const  handleClose= (e) => {\n        props.onClose();\n    }\n    const onFileChange = (e) => {\n        onFileSelect(e.target.files);\n        // TODO After upload, clear input\n        /* e.target.value = null; */\n\n    }\n    const onFileSelect = (fileList) => {\n        const files = Array.from(fileList)\n        setProgress(0)\n        /* const hasVideo = files.some((file) => file.type.indexOf('video') === 0); */\n        // TODO googleOauth, googledrive\n        files.forEach((file) => {\n            if (file.type.indexOf(\"image/\") >= 0){\n                const _URL = window.URL || window.webkitURL;\n                const img = document.createElement(\"img\");\n                img.onload = function() {\n                    var width  = img.naturalWidth  || img.width;\n                    var height = img.naturalHeight || img.height;\n                    file.width = width;\n                    file.height = height;\n                    createAttachment(file, true);\n                };\n                img.src = _URL.createObjectURL(file);\n            }else{\n                createAttachment(file, false)\n            }\n        });\n    }\n\n    const createAttachment = async (file, isImage) => {\n        try {\n            const attachRes = await postAttachment(author.communityId, author._id)\n            const uploadRes = await uploadFile(file, onUploadProgress)\n            const attachment = attachRes.data\n            const data = uploadRes.data\n            attachment.title = data.filename;\n            attachment.status = 'active';\n            data.version = attachment.data.version + 1;\n            attachment.data = data;\n            attachment.tmpFilename = data.tmpFilename;\n            const newAttachment = await putObject(attachment, author.communityId, attachment._id)\n\n            newAttachment.data.width = file.width;\n            newAttachment.data.height = file.height;\n\n\n            await postLink(props.noteId, attachment._id, 'attach')\n            //TODO updateFromConnections\n            if (props.inlineAttach){\n                const data_mce_src = 'http://localhost:8000'+newAttachment.data.url;\n                const title = newAttachment.title;\n                let html = '';\n                if (isImage) {\n                    html = '<img class=\"inline-attachment ' + attachment._id + '\" src=\"' + data_mce_src +'\" width=\"100px\" alt=\"' + title + '\" data-mce-src=\"' + data_mce_src + '\">';\n                } else {\n                    html ='<a class=\"inline-attachment ' + attachment._id + '\" href=\"' + data_mce_src + '\" target=\"_blank\" download>';\n                    html += '<img src=\"http://localhost:8000/manual_assets/kf6images/03-toolbar-attachment.png\" alt=\"' + title + '\">' + title + '</a>';\n                }\n                props.onNewInlineAttach(html)\n            } else {\n                dispatch(fetchAttachments(props.noteId))\n            }\n\n            //TODO googledrive\n            /* if(newAttachment.data.type.indexOf('video') === 0 && $community.isPluginEnabled('googledrive')){\n             *     $scope.save2GoogleDrive(userName, newAttachment);\n             * } */\n        } catch (err) {\n            console.log(err)\n        } finally {\n\n        }\n\n    }\n\n    const onUploadProgress = (progressEvent) => {\n        const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total)\n        setProgress(percentCompleted)\n    }\n\n    const styles = { width: '100%', color: 'black' };\n    return (\n        <Modal show={props.attachPanel} onHide={handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Insert Attachment File</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form.File id=\"custom-file\">\n                    <Form.File.Input onChange={onFileChange}/>\n                </Form.File>\n                <div style={styles}>\n                    <FileDrop\n                        onFrameDragEnter={(event) => console.log('onFrameDragEnter', event)}\n                        onFrameDragLeave={(event) => console.log('onFrameDragLeave', event)}\n                        onFrameDrop={(event) => console.log('onFrameDrop', event)}\n                        onDragOver={(event) => console.log('onDragOver', event)}\n                        onDragLeave={(event) => console.log('onDragLeave', event)}\n                        onDrop={(files, event) => onFileSelect(files)}\n                    >\n                        or drop some files here!\n                    </FileDrop>\n                </div>\n                <ProgressBar now={progress} />\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"primary\" onClick={handleClose}>\n                    Close\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    )\n\n};\n\nexport default AttachPanel;\n","import { createAction, createReducer } from '@reduxjs/toolkit';\nimport * as api from './api.js'\n\nexport const requestScaffold = createAction('REQUEST_SCAFFOLD')\nexport const receiveScaffold= createAction('RECEIVE_SCAFFOLD')\n\nconst initState = {isFetching: false,\n                   items: [],\n                   fetched: false,\n                  }\n\nexport const scaffoldReducer = createReducer(initState, {\n    [receiveScaffold]: (state, action) => {\n        state.items = action.payload\n        state.isFetching = false\n        state.fetched = true\n    },\n    [requestScaffold]: (state, action) => {\n        state.isFetching = true\n    }\n});\n\nexport const fetchScaffolds = (communityId, contextId) => {\n    return dispatch => {\n        dispatch(requestScaffold)\n\n        let scaffold_promise = api.getCommunity(communityId).then( res => {\n            let promises = res.data.scaffolds.map((scaffoldId) => {\n                return api.getObject(scaffoldId);\n            });\n            return Promise.all(promises).then(values =>\n                    values.map((val) => val.data)\n            )\n        });\n\n        return Promise.all([scaffold_promise, api.getLinks(contextId, 'from', 'uses')]).then(async res =>{\n            let links = res[1].map((link) => link.to);\n            let scaffolds = res[0].filter((el) => links.includes(el._id));\n            /* const scaffolds = this.state.scaffolds; */\n            let supports = await Promise.all(scaffolds.map((el) => api.getLinks(el._id, 'from')));\n            scaffolds = scaffolds.map((scaffold, i) => {\n                scaffold.supports = supports[i];\n                return scaffold;\n            })\n\n            dispatch(receiveScaffold(scaffolds))\n        });\n    }\n}\n","\nconst newScaffoldTag = (supportId, title, isTemplate, addHyphen) => (initText) => {\n\n    let supportContentId = new Date().getTime().toString();\n    var contentTagStr = '<span id=\"' + supportContentId + '\"></span>';\n    var text = contentTagStr + initText;\n    if (addHyphen) {\n        text = ' -&nbsp;' + text + '&nbsp;- ';\n    }\n\n    var tag = '';\n    tag = tag + '<br>';\n    tag = tag + '&nbsp;&nbsp;'; //important for mce\n    if (!isTemplate) {\n        tag = tag + '<span id=\"' + supportId + '\" class=\"KFSupportStart mceNonEditable\">';\n    } else {\n        tag = tag + '<span id=\"' + supportId + '\" class=\"KFSupportStart KFTemplateStart mceNonEditable\">';\n    }\n    tag = tag + createScaffoldStartTag(title, isTemplate);\n    tag = tag + '</span>';\n    if (isTemplate) {\n        tag = tag + '<p class=\"kfTemplateContent\">';\n        tag = tag + '<br><br><br><br>';\n    }\n    tag = tag + text;\n    if (isTemplate) {\n        tag = tag + '</p>';\n    }\n    if (!isTemplate) {\n        tag = tag + '<span id=\"' + supportId + '\" class=\"KFSupportEnd mceNonEditable\">';\n    } else {\n        tag = tag + '<span id=\"' + supportId + '\" class=\"KFSupportEnd KFTemplateEnd mceNonEditable\">';\n    }\n    tag = tag + createScaffoldEndTag(isTemplate);\n    tag = tag + '</span>';\n    tag = tag + '&nbsp;&nbsp;'; //important for mce\n    tag = tag + '<br>';\n    return {tag, supportContentId};\n};\n\nconst createNewScaffoldTag = function(supportId, title, text, isTemplate) {\n    var tag = '';\n    tag = tag + '<br>';\n    tag = tag + '&nbsp;&nbsp;'; //important for mce\n    if (!isTemplate) {\n        tag = tag + '<span id=\"' + supportId + '\" class=\"KFSupportStart mceNonEditable\">';\n    } else {\n        tag = tag + '<span id=\"' + supportId + '\" class=\"KFSupportStart KFTemplateStart mceNonEditable\">';\n    }\n    tag = tag + createScaffoldStartTag(title, isTemplate);\n    tag = tag + '</span>';\n    if (isTemplate) {\n        tag = tag + '<p class=\"kfTemplateContent\">';\n        tag = tag + '<br><br><br><br>';\n    }\n    tag = tag + text;\n    if (isTemplate) {\n        tag = tag + '</p>';\n    }\n    if (!isTemplate) {\n        tag = tag + '<span id=\"' + supportId + '\" class=\"KFSupportEnd mceNonEditable\">';\n    } else {\n        tag = tag + '<span id=\"' + supportId + '\" class=\"KFSupportEnd KFTemplateEnd mceNonEditable\">';\n    }\n    tag = tag + createScaffoldEndTag(isTemplate);\n    tag = tag + '</span>';\n    tag = tag + '&nbsp;&nbsp;'; //important for mce\n    tag = tag + '<br>';\n    return tag;\n};\n\n\nconst createScaffoldStartTag = function(title, isTemplate) {\n    var tag = '';\n    tag = tag + ' '; //important for mce\n    if (!isTemplate) {\n        tag = tag + '<span class=\"kfSupportStartMark\"> &nbsp; </span>';\n    } else {\n        tag = tag + '<span class=\"kfSupportStartMark kfTemplateStartMark\"> &nbsp; </span>';\n    }\n    tag = tag + ' '; //important for mce\n    if (!isTemplate) {\n        tag = tag + '<span class=\"kfSupportStartLabel\">' + title + '</span>';\n    } else {\n        tag = tag + '<span class=\"kfSupportStartLabel kfTemplateStartLabel\">' + title + '</span>';\n    }\n    tag = tag + ' '; //important for mce\n    return tag;\n};\n\nconst createScaffoldEndTag = function(isTemplate) {\n    var tag = '';\n    tag = tag + ' '; //important for mce\n    if (!isTemplate) {\n        tag = tag + '<span class=\"kfSupportEndMark\"> &nbsp; </span>';\n    } else {\n        tag = tag + '<span class=\"kfSupportEndMark kfTemplateEndMark\"> &nbsp; </span>';\n    }\n    tag = tag + ' '; //important for mce\n    return tag;\n};\n\nexport default { createNewScaffoldTag, newScaffoldTag }\n","import React from 'react';\nimport {Form, Container, Row, Col} from 'react-bootstrap';\nimport { connect } from 'react-redux'\nimport {fetchScaffolds} from '../../store/scaffoldReducer.js'\nimport scaffoldService from './scaffold.service'\nimport './scaffold.css'\n\nclass ScaffoldSelect extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {selected: props.initVal};\n        this.onSelectChange = this.onSelectChange.bind(this);\n    }\n\n\n    componentDidMount() {\n        if (!this.props.fetched){\n            const {communityId, contextId} = this.props;\n            this.props.fetchScaffolds(communityId, contextId);\n        }\n    }\n\n    onSelectChange(event) {\n        this.setState({selected: event.target.value});\n    }\n\n    scaffoldSelected = (scaffoldId, support) => {\n        const scaffold = this.props.items[scaffoldId];\n        let addhyphen = true;\n        let initialText = '';\n        const isTemplate = scaffold.data && scaffold.data.isTemplate\n        if (isTemplate) {\n            addhyphen = false;\n            initialText = '<br><br>'\n        }\n\n        const scaffold_text = support._to.title\n        const tagCreator = scaffoldService.newScaffoldTag(support.to, scaffold_text, isTemplate, addhyphen);\n        this.props.onScaffoldSelected(tagCreator, initialText)\n    }\n\n    render() {\n        const scaffolds = this.props.items;\n        const options = scaffolds.map((scaffold, i) =>\n            <option key={i} value={i}>{scaffold.title}</option>\n        );\n        let supports = '';\n        if (scaffolds.length && scaffolds[this.state.selected].supports) {\n            supports = scaffolds[this.state.selected].supports.map((support, i) =>\n                <Col className=\"mt-1 p-0\" key={i} md={12}>\n                    <div className='KFSupportButton' size='sm' onClick={() => this.scaffoldSelected(this.state.selected, support) }>\n                        {support._to.title}\n                    </div>\n                </Col>\n            );\n        }\n\n        return (\n            <Container>\n                <Row>\n                    <Col className='p-0'>\n                        <Form>\n                            <Form.Group className='mb-1' controlId=\"exampleForm.ControlSelect2\">\n                                <Form.Label>Select Scaffold</Form.Label>\n                                <Form.Control size='sm' as=\"select\" onChange={this.onSelectChange}>\n                                    {options}\n                                </Form.Control>\n                            </Form.Group>\n                        </Form>\n                    </Col>\n                </Row>\n                <Row>\n                    {supports}\n                </Row>\n            </Container>\n\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        communityId: state.globals.communityId,\n        contextId: state.globals.contextId,\n        ...state.scaffolds\n    }\n}\n\nconst mapDispatchToProps = { fetchScaffolds }\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ScaffoldSelect)\n","import React, {useState} from 'react';\nimport {useSelector} from 'react-redux'\nimport { Row, Col, Button} from 'react-bootstrap'\nimport {url as serverUrl} from '../../store/api'\nimport './attachArea.css'\n\nconst AttachArea = props => {\n\n    const attachments = useSelector(state => {\n        return props.attachments.map((attId) => state.notes.attachments[attId])\n    })\n    const [selectedImgs, setSelectedImgs] = useState([])\n    const getFileNameString = (name) => {\n       return name\n    }\n\n    const getFileSizeString = (size) => {\n        return size\n    }\n\n    const addImages = () => {\n        console.log(\"Add images\")\n        const  selectedImgs = Array.from(document.getElementById(`attachbox-${props.noteId}`).getElementsByClassName(\"selected\"))\n        if (selectedImgs.length === 0) {\n            return;\n        }\n        let html = \"\";\n        const maxWidth = 200;\n        console.log(selectedImgs)\n        selectedImgs.forEach((img) => {\n            const tagName = img.tagName;\n            let width = img.naturalWidth;\n            if(width > maxWidth){\n                width = maxWidth;\n            }\n            if (tagName === 'IMG') {\n                const data_mce_src = img.getAttribute(\"src\");\n                let className = '';\n                img.classList.forEach(cls_name => {\n                    if (cls_name.length === 24) { //Find 24 char long classes, one of them might be MongoDB id\n                        className += cls_name + ' ';\n                    }\n                })\n                html += '<img class=\"inline-attachment ' + className + '\" src=\"' + data_mce_src + '\" width=\"' + width + 'px\" alt=\"\" data-mce-src=\"' + data_mce_src + '\">';\n            }\n\n        })\n        props.onNewInlineAttach(html)\n\n    }\n    const selectedImg = (attId, e) => {\n        if (selectedImgs.includes(attId)){\n            setSelectedImgs((imgs) => imgs.filter( img => img !== attId))\n        }else{\n            setSelectedImgs((imgs) => [...imgs, attId])\n        }\n    }\n    const deleteAttachment = () => {}\n    return (\n        <Col>\n            <Row>\n                <Col>\n                    <span className=''>Insert image or file: </span>\n                    <Button className='attach-button mx-2' size='sm' variant='outline-dark' onClick={()=> props.onNewAttachClick(true)}>Inline</Button>\n                    <Button className='attach-button mx-2' size='sm' variant='outline-dark' onClick={()=>props.onNewAttachClick(false)}>As an attachment</Button>\n                    <Button className='attach-button mx-2' size='sm' variant='outline-dark' onClick={addImages} disabled={selectedImgs.length === 0}>Insert</Button>\n                </Col>\n            </Row>\n            <Row id={`attachbox-${props.noteId}`} className='attachment-box'>\n                {\n                    attachments.map((attachment) => (\n                            <div key={attachment._id} className=\"attachment-inner-box col-auto\">\n                                <div className=\"attachment-thumbnail\">\n                                    {\n                                        attachment.data.type.indexOf('image/') === 0 ?\n                                        <img className={attachment._id + \" \" + (selectedImgs.includes(attachment._id) ? 'selected' : '')} src={`${serverUrl}${attachment.data.url}`} onClick={(e) => selectedImg(attachment._id, e)} alt='attachment'/>\n                                        :\n                                        <a href={`${serverUrl}${(attachment.data.downloadUrl || attachment.data.url)}`} title={attachment.title} download>\n                                            <img className={attachment._id} src={`${serverUrl}/manual_assets/kf6images/03-toolbar-attachment.png`}\n                                                 title=\"{attachment.title}\" alt='attachment' />\n                                        </a>\n                                    }\n                                </div>\n                                <div className=\"attachment-buttons\">\n                                    <p>\n                                        <a href={`${serverUrl}${(attachment.data.downloadUrl || attachment.data.url)}`}\n                                           title={attachment.title} download>\n                                            <img className=\"download-attachment\" src={`${serverUrl}/manual_assets/kf6images/cloud-download-2x.png`}\n                                                 alt=\"Download\" height=\"15px\" />\n                                        </a>\n                                    </p>\n                                    <p>\n                                        <button className=\"delete-attachment\" onClick={deleteAttachment}>\n                                            <img src={`${serverUrl}/manual_assets/kf6images/trash.png`} alt='Delete attachment' width=\"10px\" height=\"15px\"/>\n                                        </button>\n                                    </p>\n                                </div>\n                                <div className=\"attachment-info\">\n                                    <p title=\"{attachment.title}\">{getFileNameString(attachment.title)}</p>\n                                    <p>{getFileSizeString(attachment.data.size)}</p>\n                                </div>\n                            </div>\n                ))\n                }\n            </Row>\n        </Col>\n    )\n\n};\n\nexport default AttachArea;\n","import React from 'react';\nimport MCEditor from '../editor/MCEditor'\nimport AttachPanel from '../attachmentCollapse/AttachPanel.js'\nimport {Container, Row, Col, Form} from 'react-bootstrap'\nimport ScaffoldSelect from '../scaffold/ScaffoldSelect'\nimport AttachArea from '../attachmentArea/AttachArea.js'\n\nimport './WriteTab.css';\nclass WriteTab extends React.Component {\n\n    constructor(props){\n        super(props)\n        this.state = {inlineAttach: true, attachPanel: false}\n        this.onScaffoldSelected = this.onScaffoldSelected.bind(this);\n        this.onNewAttachmentClick = this.onNewAttachmentClick.bind(this);\n        this.closeAttachPanel = this.closeAttachPanel.bind(this);\n        this.onNewInlineAttach = this.onNewInlineAttach.bind(this);\n    }\n\n    onScaffoldSelected(tagCreator, initialText){\n        this.props.onChange({scaffold: {tagCreator, initialText}})\n    }\n\n    onNewAttachmentClick(inline){\n        this.setState({inlineAttach: inline, attachPanel: true})\n    }\n    onNewInlineAttach(inlineAttach) {\n        this.props.onChange({attach: inlineAttach})\n    }\n    closeAttachPanel()  {\n        this.setState({attachPanel: false})\n    }\n    render() {\n        const {note, onChange, onEditorSetup} = this.props;\n        return (\n            <Container className='write-container p-0'>\n                    <Row>\n                        <Col>\n                            <Form.Group controlId=\"note-title\">\n                                <Form.Control type=\"text\"\n                                              size=\"sm\"\n                                              placeholder=\"Enter title\"\n                                              value={note.title}\n                                              onChange={(val) => {onChange({title: val.target.value})}}/>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col md={2} className='pr-0'>\n                            <ScaffoldSelect initVal={0} onScaffoldSelected={this.onScaffoldSelected}/>\n                        </Col>\n                        <Col md={10}>\n                            <MCEditor value={note.data.body}\n                                      onEditorSetup={onEditorSetup}\n                                      onEditorChange={(content, editor) => onChange({ data: {body: content}})}/>\n                            <div className='wordcount-bar text-right'>{note.wordCount} words</div>\n\n                        </Col>\n                    </Row>\n                    <Row className='mt-2'>\n                        <AttachPanel noteId={note._id} onClose={this.closeAttachPanel} onNewInlineAttach={this.onNewInlineAttach} {...this.state}></AttachPanel>\n                        <AttachArea\n                            noteId={note._id}\n                            attachments={note.attachments}\n                            onNewAttachClick={this.onNewAttachmentClick}\n                            onNewInlineAttach={this.onNewInlineAttach}\n                        >\n                        </AttachArea>\n                    </Row>\n            </Container>\n        )\n    }\n}\n\nexport default WriteTab;\n","import React from 'react';\n\nconst History = props => {\n\n    const [read, edit] = props.records.reduce(\n        (acc, el) => {\n            if (el.type === 'read') {\n                acc[0].push(el)\n            }else{\n                acc[1].push(el)\n            }\n            return acc\n        }, [[],[]])\n    return (\n        <div>\n            <h5>Edit logs:</h5>\n            <p className='mb-0'>{edit.length} edits</p>\n            <ul>\n                {edit.map((record) =>\n                    <li key={record._id}>{record.date}: {record.author}</li>\n                )}\n            </ul>\n            <h5>Read logs:</h5>\n            <p className='mb-0'>{read.length} reads</p>\n            <ul>\n                {read.map((record) =>\n                    <li key={record._id}>{record.date}: {record.author}</li>\n                )}\n            </ul>\n        </div>\n    )\n\n}\n\nexport default History\n","import React from 'react';\n\nconst Properties = props => {\n\n    const onPermissionChange = (evt) => {\n        props.onChange({permission: evt.target.value})\n    }\n    //TODO\n    const makeRiseAbove = () => {}\n    const isTemplateChange = (evt) => {\n        props.onChange({data: {isTemplate: evt.target.checked}})\n    }\n\n    return (\n        <div className=\"m-2\">\n            <div>\n                <label className='mt-1 font-weight-bold'>Permission:</label>\n                <div>\n                    <table className=\"KFPermission table table-sm\">\n                        <thead>\n                            <tr>\n                                <th>&nbsp;</th>\n                                <th>Authors</th>\n                                <th>Group Members</th>\n                                <th>Others</th>\n                            </tr>\n                        </thead>\n                                <tbody>\n                                    <tr>\n                                        <td>\n                                            <form action=\"\">\n                                                <div className=\"form-check form-check-inline\">\n                                                    <input className=\"form-check-input\" type=\"radio\" name='permission' value=\"private\" id=\"contrib-permission1\"\n                                                           onChange={onPermissionChange} checked={props.contribution.permission === 'private'}\n                                                    />\n                                                        <label className=\"form-check-label font-weight-normal\" htmlFor=\"contrib-permission1\">\n        &nbsp;private\n                                                        </label>\n                                                </div>\n                                            </form>\n                                        </td>\n                                        <td>rw</td>\n                                        <td>rw</td>\n                                        <td>-</td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            <form action=\"\">\n                                                <div className=\"form-check form-check-inline\">\n                                                    <input className=\"form-check-input\" type=\"radio\" value=\"protected\" id=\"contrib-permission2\" name='permission'\n                                                           onChange={onPermissionChange} checked={props.contribution.permission === 'protected'}\n                                                    />\n                                                        <label className=\"form-check-label font-weight-normal\" htmlFor=\"contrib-permission2\">\n        &nbsp;protected\n                                                        </label>\n                                                </div>\n                                            </form>\n                                        </td>\n                                        <td>rw</td>\n                                        <td>rw</td>\n                                        <td>r</td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            <form action=\"\">\n                                                <div className=\"form-check form-check-inline\">\n                                                    <input className=\"form-check-input\" type=\"radio\" value=\"public\" id=\"contrib-permission3\" name='public'\n                                                           onChange={onPermissionChange} checked={props.contribution.permission === 'public'}\n                                                    />\n                                                        <label className=\"form-check-label font-weight-normal\" htmlFor=\"contrib-permission3\">\n        &nbsp;public\n                                                        </label>\n                                                </div>\n                                            </form>\n                                        </td>\n                                        <td>rw</td>\n                                        <td>rw</td>\n                                        <td>rw</td>\n                                    </tr>\n                                </tbody>\n                    </table>\n                </div>\n                <label className=\"mt-1 font-weight-bold\">Status:</label>\n                <div className=\"ml-2\">\n                    {props.contribution.status}\n                </div>\n                <label className=\"mt-2 font-weight-bold\">Template:</label>\n                <form className=\"ml-2\" action=\"\">\n                    <div className=\"form-check  form-check-inline\">\n                        <input className=\"form-check-input\" type=\"checkbox\" id=\"c-isTemplate\" checked={props.contribution.data.isTemplate} onChange={isTemplateChange}/>\n\n                            <label className=\"form-check-label font-weight-normal\" htmlFor=\"c-isTemplate\">\n                                isTemplate\n                            </label>\n                    </div>\n                </form>\n            </div>\n            { props.contribution.type === 'Note' &&\n            (<div>\n                <label className=\"mt-1 mr-1 font-weight-bold\">Riseabove:</label>\n                    {\n                    (props.contribution.type === 'Note' && props.contribution.data && props.contribution.data.riseabove && props.contribution.data.riseabove.viewId) ?\n\n                    \"This note has riseabove view. Please look it at 'Read' tab.\"\n                    :\n\n                    <button type=\"submit\" className=\"btn btn-primary btn-sm\" onClick={makeRiseAbove()}>MakeRiseabove</button>\n                    }\n            </div>)\n            }\n        </div>\n\n    )\n}\n\nexport default Properties\n","import React, {useState} from 'react';\nimport {Button, Row, Col} from 'react-bootstrap'\nimport Select from 'react-select'\nconst AuthorSelect = props => {\n    const select_options = Object.entries(props.authors).map(\n        (auth) => { return {value: auth[1]._id, label: `${auth[1].firstName} ${auth[1].lastName}`} })\n\n    const [selectedOption, setSelectedOption] = useState(null);\n    const handleChange = selected => {\n        setSelectedOption(selected)\n    };\n\n    return (\n        <div>\n            <Row>\n                <Col>\n                    <Select options={select_options} onChange={handleChange} isClearable={true}/>\n                </Col>\n                <Col md='auto'>\n                    <Button disabled={!selectedOption}\n                        onClick={() => props.onAuthorSelected(selectedOption)}>Add</Button>\n                </Col>\n            </Row>\n            <p>{select_options.length} possible author(s) in this community.</p>\n        </div>\n    )\n}\n\nexport default AuthorSelect\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Button, Col, Row } from 'react-bootstrap'\nimport {addContribAuthor, removeContribAuthor} from '../../store/noteReducer.js'\nimport { addNotification } from '../../store/notifier.js'\nimport AuthorSelect from '../authorSelect/AuthorSelect'\nconst AuthorTab = props => {\n    const contribution = useSelector((state) => state.notes[props.contribId])\n    const authors = useSelector((state) => contribution.authors.map((auth) => state.users[auth]))\n    const communityAuthors = useSelector((state) => state.users)\n    const dispatch = useDispatch()\n\n    const removeAuthor = (author, idx) => {\n        if (idx === 0) {\n            addNotification({title: 'Error!', type:'danger', message:'cannot remove the Primary Author'})\n            return;\n        }else if (idx >= 0) {\n            dispatch(removeContribAuthor({contribId: props.contribId, author: author._id}))\n        }\n    }\n\n    const addAuthor = (author) => {\n        console.log(author)\n        if (!contribution.authors.includes(author.value)){\n            dispatch(addContribAuthor({contribId: props.contribId, author: author.value}))\n        }\n    }\n\n    return (\n                <div className=\"authorTab mt-2\" style={{height: '100%'}}>\n                    <Row>\n                        <Col>\n                            <h5>Authors:</h5>\n                            <ul>\n                                {\n                                    authors.map((author, idx) => (\n\n                                        <li key={author._id} style={{cursor: 'move'}}>\n                                            {author.firstName} {author.lastName}\n                                            <Button size='sm' className='ml-1'\n                                                    onClick={() => removeAuthor(author, idx)}>x</Button>\n                                        </li>\n\n                                    ))\n                                }\n                            </ul>\n                        </Col>\n                        <Col>\n                            <div>\n                                <h5>Add author:</h5>\n                                <AuthorSelect authors={communityAuthors} onAuthorSelected={addAuthor}/>\n                            </div>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            {/* <h5>Group:</h5>\n                                <div style=\"padding-left: 1.875rem;\">\n                                {\n                                isEditable()?\n                                <select ng-model=\"selected.group\" ng-options=\"g.title for g in community.groupsArray\" ng-change=\"updateDirtyStatus()\">\n                                <option value=\"\">Please select</option>\n                                </select>\n                                :\n                                {selected.group.title}\n                                }\n                                <div ng-show=\"selected.group._id\" style=\"padding: 0.625rem 0.625rem;\">\n                                click\n                                <a ng-href=\"contribution/{{contribution.group}}\" target=\"{{contribution.group}}\">here</a>\n                                to check member(s)\n                                </div>\n                                </div> */}\n                        </Col>\n                    </Row>\n                </div>\n\n    )\n}\n\nexport default AuthorTab\n","import React from 'react';\nimport { Tabs, Tab } from 'react-bootstrap';\nimport WriteTab from '../writeTab/WriteTab'\nimport History from '../historyTab/History'\nimport Properties from '../propertiesTab/Properties'\nimport AuthorTab from '../authorsTab/AuthorTab'\nimport { connect } from 'react-redux'\nimport {editNote, removeDrawing, editSvgDialog,\n        fetchAttachments, setWordCount, fetchRecords } from '../../store/noteReducer.js'\nimport {openDrawDialog} from '../../store/dialogReducer.js'\nimport { scaffoldWordCount } from '../../store/kftag.service.js'\nimport { dateFormatOptions } from '../../store/globalsReducer.js'\nimport './Note.css'\n\nclass Note extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onEditorSetup = this.onEditorSetup.bind(this);\n        this.onDrawingToolOpen = this.onDrawingToolOpen.bind(this);\n        this.addDrawing = this.addDrawing.bind(this);\n        this.onNoteChange = this.onNoteChange.bind(this);\n        this.wordCount = this.wordCount.bind(this);\n        this.onTabSelected = this.onTabSelected.bind(this)\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.drawing && prevProps.drawing !== this.props.drawing && this.props.drawTool === this.props.noteId) {\n            this.editor.insertContent(this.props.drawing)\n            this.props.removeDrawing()\n        }\n    }\n\n    onNoteChange(note) {\n        if (note.scaffold){\n            const {tagCreator, initialText} = note.scaffold;\n            this.addSupport(true, initialText, tagCreator)\n        }else if (note.attach){\n            this.editor.insertContent(note.attach)\n        }\n        else{\n            this.props.editNote({_id: this.props.noteId, ...note})\n            if (note.data && note.data.body) {\n                this.wordCount(note.data.body);\n            }\n        }\n    }\n\n    wordCount(text) {\n        const wordCount = this.editor.plugins.wordcount.getCount() - scaffoldWordCount(text);\n        this.props.setWordCount({contribId: this.props.noteId, wc: wordCount})\n    }\n\n    onEditorSetup(editor){\n        editor.onDrawButton = this.onDrawingToolOpen;\n        this.editor = editor;\n    }\n\n    onDrawingToolOpen(svg){\n        //Create dialog\n        if (svg) {\n            this.props.editSvgDialog(this.props.noteId, svg);\n        } else {\n            this.props.openDrawDialog(this.props.noteId);\n        }\n    }\n\n    addDrawing(drawing) {\n        // Add draw to editor\n        this.editor.insertContent(drawing);\n    }\n\n    addSupport(selection, initialText, tagCreator) {\n        const selected = this.editor.selection.getContent();\n        let text = selected.length ? selected : initialText;\n        const {tag, supportContentId} = tagCreator(text);\n        this.editor.insertContent(tag)\n        //select text after insert\n        if (selection) {\n            const contentTag = this.editor.dom.get(supportContentId);\n            if (contentTag)\n                this.editor.selection.setCursorLocation(contentTag)\n        }\n    }\n\n    onTabSelected(tab) {\n        if (tab === 'history'){ //Refresh records\n            this.props.fetchRecords(this.props.note._id)\n        }\n    }\n\n    render() {\n        const formatter = new Intl.DateTimeFormat('default', dateFormatOptions)\n        return (\n            <div>\n                <div className='contrib-info'>\n                    Created By: {this.props.author.firstName} {this.props.author.lastName} <br/>\n                    Last modified: {formatter.format(new Date(this.props.note.modified))}\n                </div>\n                <Tabs defaultActiveKey=\"write\" transition={false} onSelect={this.onTabSelected}>\n                    <Tab eventKey=\"home\" title=\"read\">\n                        <div  dangerouslySetInnerHTML={{__html: this.props.note.data.body}} />\n                    </Tab>\n                    <Tab eventKey=\"write\" title=\"write\">\n                        <WriteTab\n                            note={this.props.note}\n                            onScaffoldSelected={this.scaffoldSelected}\n                            onChange={this.onNoteChange}\n                            onEditorSetup={this.onEditorSetup}\n                        ></WriteTab>\n                    </Tab>\n                    <Tab eventKey=\"contact\" title=\"author(s)\">\n                        <AuthorTab contribId={this.props.noteId}/>\n                    </Tab>\n                    <Tab eventKey='history' title='history'><History records={this.props.note.records}/></Tab>\n                    <Tab eventKey='properties' title='properties'><Properties contribution={this.props.note} onChange={this.onNoteChange}/></Tab>\n                </Tabs>\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const note = state.notes[ownProps.noteId]\n    return {\n        note: note,\n        drawing: state.notes.drawing,\n        drawTool: state.dialogs.drawTool,\n        author: note && (state.users[note.authors[0]] || 'NA')\n    }\n}\n\nconst mapDispatchToProps = { editNote, openDrawDialog, setWordCount,\n                             removeDrawing, editSvgDialog, fetchAttachments, fetchRecords}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Note)\n\n","import React from 'react';\nimport Dialog from '../dialog/Dialog.js'\nimport { connect } from 'react-redux'\n\nclass DrawDialog extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.onConfirm = this.onConfirm.bind(this);\n        this.onLoad = this.onLoad.bind(this);\n        this.getIframeRef = this.getIframeRef.bind(this);\n    }\n\n    onConfirm(){\n        var wnd1 = this.iframe_ref.contentWindow;\n        var bg = wnd1.svgCanvas.current_drawing_.all_layers[0];\n        var wnd2 = wnd1.svgCanvas.current_drawing_.all_layers[1];\n\n        var widd = wnd2[1].getBBox().width;\n        var heig = wnd2[1].getBBox().height;\n\n        wnd1.svgCanvas.current_drawing_.svgElem_.setAttribute(\"width\", widd);\n        wnd1.svgCanvas.current_drawing_.svgElem_.setAttribute(\"height\", heig);\n        bg[1].childNodes[1].setAttribute(\"width\", widd);\n        bg[1].childNodes[1].setAttribute(\"height\", heig);\n\n        wnd1.svgCanvas.selectAllInCurrentLayer();\n        wnd1.svgCanvas.groupSelectedElements();\n        wnd1.svgCanvas.alignSelectedElements('l', 'page');\n        wnd1.svgCanvas.alignSelectedElements('t', 'page');\n        wnd1.svgCanvas.ungroupSelectedElement();\n        wnd1.svgCanvas.clearSelection();\n\n        wnd1.svgCanvas.current_drawing_.svgElem_.setAttribute(\"padding\", '2em');\n        wnd1.svgCanvas.setResolution('fit', 100);\n        var svg = wnd1.svgCanvas.getSvgString();\n\n        var canvas = document.createElement(\"canvas\");\n\n        canvas.width = widd + 4;\n        canvas.height = heig + 4;\n\n        var ctx = canvas.getContext(\"2d\");\n\n        var img = document.createElement(\"img\");\n\n        img.setAttribute(\"src\", \"data:image/svg+xml;base64,\" + btoa(svg));\n\n        img.onload = function () {\n            ctx.drawImage(img, 0, 0);\n            var p = canvas.toDataURL(\"image/png\");\n            const drawing = \"<img alt='\" + svg + \"' src='\" + p + \"'/>\";\n\n            this.props.onConfirm(drawing);\n        }.bind(this);\n    }\n\n    getIframeRef(frame) {\n        if(!frame) {\n            return\n        }\n        this.iframe_ref = frame\n    }\n\n    onLoad(e){\n        const svg = this.props.note.editSvg\n        if (svg){\n            e.target.contentWindow.svgCanvas.setSvgString(svg)\n        }\n    }\n\n    render() {\n        return (\n            <Dialog\n                title='DrawTool'\n                style={{zIndex: 3000}}\n                onClose={this.props.onClose}\n                onConfirm={this.onConfirm}\n                confirmButton='Add'>\n\n\n                <iframe onLoad={this.onLoad} title='DrawingTool' src='/drawing-tool/svg/index.html' ref={this.getIframeRef} width='100%' height='100%'></iframe>\n            </Dialog>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        note: state.notes[ownProps.noteId],\n    }\n}\n\n/* const mapDispatchToProps = { editNote, openDrawDialog, removeDrawing, editSvgDialog} */\n\nexport default connect(\n    mapStateToProps,\n)(DrawDialog)\n","import React, {useCallback} from 'react';\nimport Dialog from '../dialog/Dialog.js';\nimport Note from '../note/Note.js';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {closeDialog, closeDrawDialog, focusDialog } from '../../store/dialogReducer.js'\nimport {removeNote, addDrawing, postContribution} from '../../store/noteReducer.js'\nimport DrawDialog from '../drawDialog/DrawDialog.js'\n\nconst DialogHandler = props => {\n    const dialogs = useSelector(state => state.dialogs);\n    const dispatch = useDispatch();\n    // Close dialog and remove dialog AND note from state\n\n    const onDialogClose = useCallback(\n        (dlg) => {\n            dispatch(closeDialog(dlg.id));\n            dispatch(removeNote(dlg.noteId));\n        },\n        [dispatch]\n    )\n\n    const onDialogConfirm = useCallback(\n        (dlg) => {\n            dispatch(postContribution(dlg.noteId, dlg.id));\n            /* dispatch(closeDialog(dlg.id)); */\n        },\n        [dispatch]\n    );\n\n    const onFocusDialog = useCallback(\n        (dlgId) => dispatch(focusDialog(dlgId)),\n        [dispatch]\n    );\n\n    const onCloseDrawDialog = useCallback(\n        () => {\n            dispatch(closeDrawDialog())\n        },\n        [dispatch]\n    );\n\n    const onConfirmDrawDialog = useCallback(\n        (drawing) => {\n            dispatch(addDrawing(drawing))\n            dispatch(closeDrawDialog())\n        },\n        [dispatch]\n    );\n\n    return (\n        <div>{\n            dialogs.dialogs.map((elt, i) =>\n                <Dialog key={elt.id}\n                        onMouseDown={() => onFocusDialog(elt.id)}\n                        title={elt.title}\n                        style={{zIndex: elt.zIndex}}\n                        onClose={()=>onDialogClose(elt)}\n                        onConfirm={()=> onDialogConfirm(elt)}\n                        confirmButton={elt.confirmButton}>\n\n                    <Note key={elt.noteId} noteId={elt.noteId} />\n                </Dialog>\n            )\n        }\n\n            {dialogs.drawTool!== null ?\n             <DrawDialog onClose={onCloseDrawDialog}\n                         onConfirm={onConfirmDrawDialog}\n                         noteId={dialogs.drawTool}\n             /> : null}\n\n        </div>\n    )\n\n}\nexport default DialogHandler;\n","import React, { Component } from 'react';\nimport { Button, Row, Col,} from 'react-bootstrap';\nimport {Form, FormGroup, Input, Alert} from 'reactstrap';\n\nimport Axios from 'axios';\n\nimport './NoteContent.css';\nimport {apiUrl} from '../../store/api.js';\n\nclass NoteContent extends Component{\n    noteList = [];\n    constructor(props) {\n        super(props);\n        this.state={\n        token : sessionStorage.getItem('token'),\n        myViews : [],\n        viewId : sessionStorage.getItem('viewId'),\n        viewTitle : sessionStorage.getItem(\"viewTitle\")? sessionStorage.getItem(\"viewTitle\") :'welcome',\n        addView : sessionStorage.getItem(\"viewTitle\")? sessionStorage.getItem(\"viewTitle\") :'welcome',\n        communityId : sessionStorage.getItem('communityId'),\n        visible : false,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n        \n    }\n\n    componentDidMount(){\n\n        //SET HEADER WITH TOKEN BEARER\n        var config = {\n          headers: { Authorization: `Bearer ${this.state.token}` }\n        };\n    \n       //GET USER'S VIEWS\n        var viewUrl= `${apiUrl}/communities/${this.state.communityId}/views`;\n    \n        Axios.get(viewUrl, config)\n        .then(\n            result=>{\n              this.setState({\n                myViews: result.data\n              })\n            }).catch(\n                error=>{\n                    // alert(error);\n                });\n      }\n\n      handleChange(e) {\n        e.persist();\n        let target = e.target;\n        let id = target.value;\n        \n        this.setState({\n            addView : id,\n        });\n             \n    }\n  \n      handleSubmit(e) {\n        e.preventDefault();\n        console.log(\"State Handle Submit\", this.state.addView);\n\n        let url = `${apiUrl}/links`;\n        let config = {\n            headers: { Authorization: `Bearer ${this.state.token}` }\n          };\n        this.props.noteContnetList.forEach(note => {\n            let noteId = note._id;\n            let query = {\n                \"from\": this.state.addView,\n                \"to\" : noteId,\n                \"type\": \"contains\"\n            };\n            Axios.post(url, query, config).then(\n                res => {\n                    // console.log(\"AZIOX POST DONE\");\n                    this.setState({visible:true},()=>{\n                        window.setTimeout(()=>{\n                          this.setState({visible:false})\n                        },1000)\n                    });\n                    \n                }\n            );    \n        });\n        \n        \n        \n       // POST LINKS ALERT THEY'RE ADDED TO VIEW TITLE\n      \n      }\n\n    render(){\n        \n        return(\n            <>\n                <Form className=\"mrg-1-top\">\n                <Row>\n                    <Col md=\"8\">\n                    <FormGroup>\n                    {/* <Label>Select Community</Label> */}\n                        <Input type=\"select\" name=\"viewId\" value={this.state.addView} onChange={this.handleChange}>{\n                            this.state.myViews.map((obj, i) => {\n                                return <option key={i} value={obj._id}> {obj.title} </option>\n                            })\n                        }</Input>\n                    </FormGroup>\n                    </Col>\n\n                    <Col md=\"4\">\n                        <Button onClick={this.handleSubmit} >Add to View</Button>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                    <Alert color=\"info\" isOpen={this.state.visible} >\n                    Notes added to View!\n                    </Alert>\n                    </Col>\n                </Row>\n                </Form>                \n            {this.props.noteContnetList.map(\n                (obj,i)=>{\n\n                    if(this.props.query && obj.data.English){\n                        let innerHTML = obj.data.English;\n                        let index = innerHTML.indexOf(this.props.query);\n                        if (index >= 0) { \n                            obj.data.English = innerHTML.substring(0,index) + \"<span class='highlight'>\" + innerHTML.substring(index,index+this.props.query.length) + \"</span>\" + innerHTML.substring(index + this.props.query.length);\n                        }\n                    }else if(this.props.query && obj.data.body){\n                        let innerHTML = obj.data.body;\n                        let index = innerHTML.indexOf(this.props.query);\n                        if (index >= 0) { \n                            obj.data.body = innerHTML.substring(0,index) + \"<span class='highlight'>\" + innerHTML.substring(index,index+this.props.query.length) + \"</span>\" + innerHTML.substring(index + this.props.query.length);\n                        }   \n                    }              \n\n                    return<>\n                        <Row className=\"min-height-2 mrg-05 border rounded mrg-1-bot pd-1\" key={i}>\n                            <Col>\n                                <Row>\n                                    <Col md=\"11\" className=\"pd-1 primary-800 font-weight-bold\">{obj.title }</Col>\n                                    <Col md=\"1\"><Button variant=\"secondary\" onClick={()=>this.props.closeNote(obj._id)}>X</Button></Col>\n                                </Row>\n                                <Row><span className=\"pd-1\" dangerouslySetInnerHTML={{ __html: obj.data.English ? (obj.data.English):(obj.data.body)}} /></Row>\n                            </Col>\n                        </Row>\n\n                    </>\n                }\n            )}\n            </>\n        )\n    }\n\n}\nexport default NoteContent;","import { createAction, createReducer } from '@reduxjs/toolkit';\nimport * as api from './api.js'\n\nexport const addUser = createAction('ADD_USER')\nexport const addAuthors = createAction('ADD_AUTHORS')\nconst initState = {}\nexport const userReducer = createReducer(initState, {\n    [addUser]: (state, action) => {\n        state[action.payload._id] = action.payload\n    },\n    [addAuthors]: (state, action) => {\n        action.payload.forEach((author) => state[author._id] = author )\n    }\n\n})\n\nexport const fetchAuthors = (communityId) => async (dispatch) => {\n    const authors = await api.getCommunityAuthors(communityId)\n    dispatch(addAuthors(authors))\n}\n","import React, { Component } from 'react';\nimport Axios from 'axios';\nimport {apiUrl} from '../../store/api.js';\n\nclass Author extends Component{\n    token = sessionStorage.getItem('token');\n    constructor(props) {\n        super(props);\n        this.state={\n            communityId: sessionStorage.getItem('communityId'),\n            authors: [],\n            authorName:\"\",\n        }\n        \n    }\n\n    componentDidMount(){\n        var config = {\n            headers: { Authorization: `Bearer ${this.token}` }\n        }; \n\n        //GET AUTHORS\n        var authorUrl = `${apiUrl}/communities/${this.state.communityId}/authors`;\n        Axios.get(authorUrl, config)\n        .then(\n            result=>{\n                this.setState({\n                    authors : result.data,\n                });\n\n                this.state.authors.filter(obj => obj._id.includes(this.props.authorId)).map(filteredObj => {\n                    this.setState({\n                        authorName: filteredObj.firstName + \" \"+ filteredObj.lastName,\n                    });\n                    return null;\n                });\n\n            }).catch(\n                error=>{\n                    alert(error);\n                });\n\n    }\n\n    render(){\n        return(\n            <>\n            <span> {this.state.authorName}</span>\n            </>\n        )\n    }\n\n}\nexport default Author;","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { DropdownButton, Dropdown, Button, Row, Col, Modal } from 'react-bootstrap';\nimport { Form, FormGroup, Label, Input} from 'reactstrap';\nimport Axios from 'axios';\nimport {apiUrl} from '../store/api.js';\nimport * as api from '../store/api.js';\nimport {newNote, openContribution} from '../store/noteReducer.js'\nimport { connect } from 'react-redux'\nimport DialogHandler from '../components/dialogHandler/DialogHandler.js'\nimport NoteContent from '../components/NoteContent/NoteContent'\nimport { fetchAuthor, fetchView, fetchCommunity, setCommunityId, setViewId} from '../store/globalsReducer.js'\nimport { fetchAuthors } from '../store/userReducer.js';\nimport Author from '../components/Author/Author';\nimport './View.css';\nconst _ = require('lodash');\n\nclass View extends Component {\n\n    myRegistrations= [];\n    myViews = []; \n    myCommunityId = '';\n    show= false; \n    from = [];\n    to = []; \n    myTempTo = [];\n    hierarchyNote =[];\n    noteData1 = [];\n    noteContnetNew =[];\n\n    //TOKEN\n    token = sessionStorage.getItem('token');\n\n\n    constructor(props) {\n        super(props);\n        // GET communityId AND welcomeId IN myState\n        // this.myState= this.props.location.state;\n        \n        //COMMUNITY-ID\n        // this.myCommunityId = this.myState.communityId;\n\n        this.state={\n            communitites: [],\n            myCommunities: [],\n            views: [],\n            communityId: sessionStorage.getItem('communityId'),\n            viewId: sessionStorage.getItem('viewId'),\n            viewLinks : [],\n            showView: false,\n            showCommunity: false,\n            showContribution: false,\n            showNote: false,\n            hNotes: [],\n            addView: '',\n            showRiseAbove : false,\n            showModel : false,\n            showNoteContent: false,\n            noteContnetList : [],\n            query:\"\",\n            filteredData: [],\n            filter:'title',\n            authors: [],\n            scaffolds : [],\n            scaffoldsTitle : [],\n            noteData: [],\n\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.handleSubmitView = this.handleSubmitView.bind(this);\n        this.handleChangeView = this.handleChangeView.bind(this);\n        \n        this.onCloseDialog = this.onCloseDialog.bind(this);\n        \n        this.onConfirmDrawDialog = this.onConfirmDrawDialog.bind(this);\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        \n        this.showContent = this.showContent.bind(this);\n    }\n\n\n    componentDidMount(){\n        /* this.props.setCommunityId(sessionStorage.getItem('communityId'))\n         * this.props.setViewId(sessionStorage.getItem('viewId')) */\n        this.props.fetchAuthor(this.props.communityId)\n        this.props.fetchView(this.props.viewId)\n        this.props.fetchCommunity(this.props.communityId)\n        this.props.fetchAuthors(this.props.communityId)\n\n        this.setState(this.props.location.state);\n        // console.log(\"state\",this.state);\n        \n\n        //GET LIST OF ALL COMMUNITIES\n        Axios.get(`${apiUrl}/communities`)\n        .then(\n            result=>{\n                this.setState({\n                    communitites: result.data\n                 })\n            }).catch(\n                error=>{\n                    console.log(\"GET Communities Failed\");\n                    alert(\"GET Communities Failed\");\n                }\n            );\n            \n            //SET HEADER WITH TOKEN BEARER\n            var config = {\n                headers: { Authorization: `Bearer ${this.token}` }\n            };\n\n            //GET USER'S VIEWS\n            var viewUrl= `${apiUrl}/communities/${this.state.communityId}/views`;\n            Axios.get(viewUrl, config)\n            .then(\n                result=>{\n                    this.setState({\n                        myViews: result.data\n                     })\n                    \n                }).catch(\n                    error=>{\n                        alert(error);\n                    });  \n                    \n\n            //GET USER'S REGISTERED COMMUNITIES\n            Axios.get(`${apiUrl}/users/myRegistrations`, config)\n            .then(\n                result=>{\n                    this.setState({\n                        myCommunities: result.data\n                     })\n                }).catch(\n                    error=>{\n                        alert(error);\n                    }\n                );\n\n\n            let viewNotesUrl= `${apiUrl}/links/from/${sessionStorage.getItem('viewId')}`;\n            let links;\n            let noteData=[];\n            // GET NOTES ID IN VIEW\n            Axios.get(viewNotesUrl, config)\n            .then(\n                result=>{\n                    // links = result.data;\n                    links = result.data.filter(obj=>(obj._to.type === \"Note\" && obj._to.title !== \"\" && obj._to.status === \"active\")).map(\n                        filteredObj=>{\n                            \n                            let noteUrl=`${apiUrl}/objects/${filteredObj.to}`;\n                            // GET NOTEDATA\n                            Axios.get(noteUrl, config)\n                            .then(\n                                result=>{\n                                    noteData.push(result.data);\n                                }).catch(\n                                    error=>{\n                                        console.log(\"Failed to get data for: \",filteredObj.to);                                        \n                                });\n                            return filteredObj;\n                    });\n\n                    const sortedLinks = _.sortBy(links, function(obj) { \n                        return obj._to.modified;\n                    }).reverse();\n\n                    this.setState({\n                        viewLinks: sortedLinks, \n                        noteData : noteData,\n                    });\n                    // console.log(\"state link and data\", this.state.viewLinks, this.state.noteData);\n                    this.noteData1 = noteData;\n        \n                }).catch(\n            error=>{\n                console.log(\"Failed to get Links for viewId\", sessionStorage.getItem('viewId'));\n            });\n\n            \n            //GET SEARCH - HIRARCHICAL NOTES\n            var searchUrl = `${apiUrl}/links/${this.state.communityId}/search`;\n            let query = {\"query\": {\"type\": \"buildson\"}};\n            let buildOnResult = [];\n            Axios.post(searchUrl, query, config)\n            .then(\n                result=>{\n                    buildOnResult = result.data.reverse();\n                    let filteredBuildOn = buildOnResult.filter(function (obj){\n                        if ((obj._to.type === \"Note\" && obj._to.status === \"active\") \n                            && (obj._from.type === \"Note\" && obj._from.status === \"active\")) {\n                                return obj;\n                        }\n                        else {\n                            return null;\n                        }\n                    });\n\n                    filteredBuildOn.map(obj=>{\n                        this.from.push(obj.from);\n                        this.to.push(obj.to);\n                        this.hierarchyNote.push(obj);\n                        return null;\n                    });\n\n                    try {\n                        for(var l in this.to){\n                            if(this.from.includes(this.to[l])){\n                                var index= this.from.indexOf(this.to[l]);\n                                var temporaryTo = [];\n                                if(this.hierarchyNote[index]){\n                                    temporaryTo.push(this.hierarchyNote[index]);\n                                }\n                                temporaryTo.push(this.hierarchyNote[l]);\n                                this.hierarchyNote[l] = temporaryTo;\n                                delete this.hierarchyNote[index];                                \n                            }\n                        }\n                        \n                    } catch (error) {\n                        console.log(\"Error in Hnotes\", error);\n                        \n                    }finally{\n                        this.setState({\n                            hNotes : this.hierarchyNote\n                        })\n                        // console.log(\"HNOTES\", this.state.hNotes);\n                        \n                    }                      \n                }).catch(\n                    error=>{\n                        console.log(\"Error occured for BuildsOn\", error);                        \n                })\n\n            \n            //GET AUTHORS\n            var authorUrl = `${apiUrl}/communities/${this.state.communityId}/authors`;\n            Axios.get(authorUrl, config)\n            .then(\n                result=>{\n                    this.setState({\n                        authors : result.data,\n                    });\n\n                    // console.log(\"this.state.authors\",this.state.authors);\n\n\n                }).catch(\n                    error=>{\n                        alert(error);\n                    });\n\n            //GET SCAFFOLDS\n            let scaffoldIds =[];\n            let scaffolds = [];\n            api.getCommunity(this.state.communityId).then(\n                res=>{\n                    scaffoldIds = res.data.scaffolds\n                    // console.log(\"res\", scaffoldIds);\n                    \n                    scaffoldIds.forEach(id => {\n                        // CALL COMMNITY LINK / VIEW LINK  ID THEN SEARCH IN CONTENT  \n                        let url = `${apiUrl}/links/from/` + id ;\n                        \n                        Axios.get(url, config)\n                        .then(\n                            result=>{\n                                scaffolds.push(result.data);\n                        });\n                    });\n\n                    this.setState({\n                        scaffolds : scaffolds,\n                    });                                    \n                });\n            }\n\n    handleChange = (e) => {\n        let target = e.target;\n        let name = target.name;\n        let value = target.value;\n        // console.log(name,value);        \n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        // console.log('The form was submitted with:');\n        // console.log(this.state.communitySelect);\n        // console.log('ADD view:',this.state.addView);\n    }\n\n    handleChangeView = (e) => {\n        let target = e.target;\n        let name = target.name;\n        let value = target.value;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleSubmitView(e) {\n        e.preventDefault();\n        var config = {\n            headers: { Authorization: `Bearer ${this.token}` }\n        };        \n        \n        var addViewUrl = `${apiUrl}/contributions/${this.state.communityId}`;\n        \n        var query= {\"authors\":[sessionStorage.getItem(\"userId\")],\n            \"communityId\":this.state.communityId, \n            \"permission\":\"public\",\n            \"status\":\"active\",\n            \"title\": this.state.addView,\n            \"type\": \"View\"}\n        Axios.post(addViewUrl,query,config)\n            .then(\n                result=>{\n                    // console.log(\"Successful\",result);\n                    \n                }\n            ).catch(\n                error=>{\n                    console.log(error);\n                    \n                }\n            );\n    }\n\n    logout(){\n        sessionStorage.removeItem('token');\n    }\n\n    newContribution(){\n        // console.log(\"New Contribution onclick works\");\n        this.setState({\n            showContribution: true,\n            showCommunity: false,\n            showView: false,\n            showRiseAbove: false,\n        })\n    }\n\n    newNote(){\n        // console.log(\"New Note onclick works\");\n        this.setState({\n            showNote: true,\n            showView: false,\n            showRiseAbove : false,\n        })\n    }\n\n    newView(){\n        // console.log(\"New View onclick works\"); \n        this.setState({\n            showView: true,\n            showRiseAbove : false,\n            showNote : false,\n            showModel: true, \n        })\n    }\n\n    newRiseAbove(){\n        // console.log(\"New RiseAbove onclick works\");\n        this.setState({\n            showView: false,\n            showNote : false,\n            showRiseAbove : true,\n            showModel: true,\n        }) \n    }\n    \n    //HANDLE MODEL\n    handleShow(value){\n        this.setState({\n            showModel: value,\n        });\n        \n    }\n\n    handleShowNoteContent(value){\n        this.setState({\n            showView: false,\n            showNote : false,\n            showRiseAbove : false,\n        });\n        \n    }\n\n    showContent(event, id){\n        let isChecked = event.target.checked;\n        this.setState({\n            showNoteContent : true,\n        });\n        \n        if (isChecked) {\n            var myArray = this.noteData1;\n            myArray.map((object)=>{\n                if(object._id && object._id===id){\n                    this.noteContnetNew.push(object);\n                    this.setState({\n                        noteContnetList : this.noteContnetNew,\n                    })\n                    // console.log(\"STATE DATA\", this.state.noteContnetList);\n                    \n                }\n                return null;\n            });\n            \n        } else {\n            this.noteContnetNew.filter(obj => obj._id.includes(id)).map(filteredObj => {\n                this.noteContnetNew.pop(filteredObj)\n                return null;\n            });\n            this.setState({\n                noteContnetList : this.noteContnetNew,\n            })\n        }\n               \n    }\n\n    //CLOSE NOTE\n    closeNote = (id) => {\n        if (this.state.noteContnetList){\n            let noteArray = [...this.state.noteContnetList];\n        \n            if(noteArray){             \n                noteArray.filter(obj => obj._id.includes(id)).map(filteredObj => {\n                    noteArray.pop(filteredObj);\n                    this.setState({\n                        noteContnetList : [...noteArray],\n                    });\n                    // this.refs[id]\n                    // console.log(\"Check refs\",this.refs[id]);\n                    return null;\n                    \n                });\n            }\n        }       \n        \n    }\n\n\n    filterNotes = (query) => {\n        // console.log(\"filterNotes\", query);\n        let filteredResults=[];\n        filteredResults = this.noteData1.filter(function (obj) {\n            if (obj.data && obj.data.English){                      \n                return obj.data.English.includes(query);\n            }\n            return null;\n        });\n        this.setState({\n            filteredData : filteredResults,\n        });\n        \n    }\n\n\n    changeView(viewObj){\n        // console.log(\"viewId\",viewObj.obj._id);\n        this.setState({\n            viewId: viewObj.obj._id,\n        })\n        sessionStorage.setItem(\"viewId\", viewObj.obj._id);\n        sessionStorage.setItem(\"viewTitle\", viewObj.obj.title);\n        this.handleShow(false);\n        window.location.reload();\n        \n    }\n\n    onConfirmDrawDialog(drawing){\n        this.props.addDrawing(drawing);\n        this.props.closeDrawDialog();\n    }\n\n    onCloseDialog(dlg){\n        this.props.removeNote(dlg.noteId);\n        this.props.closeDialog(dlg.id);\n    }\n\n    handleInputChange = (event) => {\n        this.setState({\n            query : event.target.value,\n        });\n\n        let filteredResults=[];\n        if(this.state.query || this.state.filter){\n            switch (this.state.filter) {\n                case \"title\":\n                    this.state.viewLinks.filter(obj => obj._to.title.includes(this.state.query)).map(filteredObj => {\n                        filteredResults.push(filteredObj);\n                        return null;\n                    })\n                    break;\n                \n                case \"content\":\n                    filteredResults = this.noteData1.filter(function (obj) {\n                        if (obj.data && obj.data.English){                      \n                            return obj.data.English.includes(event.target.value);\n                        }\n                        else if(obj.data && obj.data.body){\n                            return obj.data.body.includes(event.target.value);\n                        }\n                        else {\n                            return null;\n                        }\n                    });\n                    \n                    break;\n                \n                case \"author\":\n                    // console.log(\"Author\", this.state.query);\n                    // console.log(\"State authors\", this.state.authors);\n                    var authorId =[];\n\n                    this.state.authors.map(obj=>{\n                        if(obj.firstName.toLowerCase().includes(this.state.query.toLowerCase()) || obj.lastName.toLowerCase().includes(this.state.query.toLowerCase())){\n                            // console.log(\"Matched\", obj._id);\n                            authorId.push(obj._id);   \n                        }\n                        return null;\n                    });\n                    \n                    authorId.forEach(element => {\n                        filteredResults = this.noteData1.filter(obj => obj.authors.includes(element)).map(filteredObj=>{\n                            return filteredObj; \n                        });\n                    });\n                    \n\n                    break;\n                case \"scaffold\":\n                    //GET SCAFFOLD TITLES\n                    let scaffoldTitle = [];\n                    this.state.scaffolds.map(\n                        element => {\n                            element.map(\n                                obj =>{\n                                    scaffoldTitle.push(obj._to.title);\n                                    return null;\n                                });\n                                return null;\n                        }\n                    );\n\n                    this.setState({\n                        scaffoldsTitle : scaffoldTitle,\n                    });\n                    \n                    \n                    \n                    break;\n            \n                default:\n                    break;\n            }\n        }\n        \n        this.setState({\n            filteredData : filteredResults,\n        })\n      };\n\n\n    handleFilter = (e) => {\n        let value = e.target.value;\n        this.setState({\n            filter: value,\n        });\n    }\n\n    buildOn = (buildOn) => {\n        sessionStorage.setItem(\"buildOn\", buildOn);\n        this.props.newNote(this.props.view, this.props.communityId, this.props.author._id) ;       \n    }\n\n\n\n    render() {\n\n        return (\n            <>\n                <DialogHandler/>\n\n                    <div className=\"row min-width\">\n                        {/* LEFT NAVBAR */}\n                        <Col md=\"1\" sm=\"12\" className=\"pd-6-top\">\n                            \n                            <Row className=\"mrg-025\">\n                                <Col md=\"12\"sm=\"2\" xs=\"2\">\n                                    <DropdownButton drop=\"right\" variant=\"outline-info\" title={<i className=\"fas fa-plus-circle\"></i>}>\n                                        \n                                        <Dropdown.Item onClick={()=>this.props.newNote(this.props.view, this.props.communityId, this.props.author._id)}>\n                                                New Note\n                                        </Dropdown.Item>\n\n                                        <Dropdown.Item onClick={()=>this.newView()}>\n                                                new View\n                                        </Dropdown.Item>\n                                        \n                                        <Dropdown.Item onClick={()=>this.newRiseAbove()}>\n                                                New RiseAbove\n                                        </Dropdown.Item>\n                                    </DropdownButton>\n                                </Col>\n                            \n                            \n                            {/* <Toolbar></Toolbar>*/}\n                            <Col md=\"12\"sm=\"2\" xs=\"2\">\n                                <DropdownButton drop=\"right\" variant=\"outline-info\" title={<i className=\"fa fa-pencil\"></i>}>\n                    \n                                </DropdownButton>\n                            </Col>\n                            <Col md=\"12\"sm=\"2\" xs=\"2\">\n                                <DropdownButton drop=\"right\" variant=\"outline-info\" title={<i className=\"fas fa-file\"></i>}>\n                    \n                                </DropdownButton>\n                            </Col>\n                            <Col md=\"12\"sm=\"2\" xs=\"2\">\n                                <DropdownButton drop=\"right\" variant=\"outline-info\" title={<i className=\"fas fa-hammer\"></i>}>\n                    \n                                </DropdownButton>\n                            </Col>\n                            \n                            <Col md=\"12\"sm=\"2\" xs=\"2\">\n                                <DropdownButton drop=\"right\" variant=\"outline-info\" title={<i className=\"fas fa-edit\"></i>}>\n                    \n                                </DropdownButton>\n                            </Col>\n\n                            </Row>\n                        </Col> \n                 \n                        \n                        {/* NOTES */}\n                        <Col md=\"5\" sm=\"12\" className=\"mrg-6-top pd-2-right v-scroll\">\n                        <Form className=\"mrg-1-bot\">\n                            <Row>\n                                <Col md=\"8\">\n                                    <FormGroup>\n                                    <Input\n                                        placeholder=\"Search Your Note\"\n                                        onChange={this.handleInputChange}\n                                    />\n                                    </FormGroup>\n                                </Col>\n                                <Col md=\"4\">\n                                    <FormGroup>\n                                        <Input type=\"select\" name=\"filter\" id=\"filter\" onChange={this.handleFilter}>\n                                            <option key=\"title\" value=\"title\">Search By Title</option>\n                                            <option key=\"scaffold\" value=\"scaffold\">Search By Scaffold</option>\n                                            <option key=\"content\" value=\"content\">Search By Content</option>\n                                            <option key=\"author\" value=\"author\">Search By Author</option>\n                                        </Input>\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                        </Form> \n                        {this.state.query === \"\"? \n                        (<>\n                            {this.state.hNotes.map((obj, i) => {\n                            return <Row key={i} className=\"mrg-05-top\">\n                                <Col className=\"mr-auto primary-bg-200 rounded mrg-1-bot\">\n                                    {obj._to && obj._to.title && obj._to.created ?(<>\n                                        <Row className=\"pd-05\">\n                                            <Col md=\"10\" className=\"primary-800 font-weight-bold\">{obj._to.title}</Col>\n                                            <Col md=\"2\">\n                                            <Form className=\"mrg-1-min pd-2-right\">\n                                                <FormGroup>\n                                                    <Input type=\"checkbox\" ref= {obj.to} onChange={e => this.showContent(e, obj.to)}/>\n                                                </FormGroup>\n                                            </Form>\n                                            </Col>\n                                        </Row>\n                                    <Row className=\"primary-600 sz-075 pd-05\">\n                                        <Col><Author authorId ={obj._to.authors}/>&nbsp; {obj._to.created}</Col>\n                                        <Col md=\"2\">\n                                            <Button onClick={()=>this.buildOn(obj.to)}>BuildOn</Button>\n                                        </Col>\n                                    </Row>\n                                        </>)\n                                        :\n                                        (<>\n                                            {obj[0]? \n                                            (<>\n                                                <Row className=\"\">\n                                                <Col>\n                                                    <Row>\n                                                    {obj[0]._to && obj[0]._to.title && obj[0]._to.created ?\n                                                    (<>\n                                                        <Col>\n                                                            <Row className=\"pd-05\">\n                                                                <Col md=\"10\" className=\"primary-800 font-weight-bold\"> {obj[0]._to.title}</Col>\n                                                                <Col md=\"2\">\n                                                                    <Form className=\"mrg-1-min pd-2-right\">\n                                                                        <FormGroup>\n                                                                            <Input type=\"checkbox\" ref= {obj[0].to} onChange={e => this.showContent(e, obj[0].to)}/>\n                                                                        </FormGroup>\n                                                                    </Form>\n                                                                </Col>\n                                                                </Row>\n                                                            <Row className=\"primary-600 sz-075 pd-05\">\n                                                                <Col><Author authorId ={obj[0]._to.authors}/>&nbsp; {obj[0]._to.created}</Col>\n                                                                <Col md=\"2\">\n                                                                    <Button onClick={()=>this.buildOn(obj[0].to)}>BuildOn</Button>\n                                                                </Col>\n                                                                </Row>\n                                                        </Col>\n                                                    </>)\n                                                    :\n                                                    null}\n                                                    </Row>\n                                                \n                                                {obj.map((subObj,j)=>{\n                                                    return <Row key={j}>\n                                                        <Col md=\"1\">\n                                                        </Col>\n                                                        <Col>\n                                                            {obj[0] && obj[0]._to && obj[0]._to.title && subObj && subObj._from && subObj._from.created ?(<>\n                                                            <Row className=\"pd-05 border-left border-primary\">\n                                                                <Col className=\"primary-800 font-weight-bold\">{subObj._from.title}</Col>\n                                                                <Col md=\"2\">\n                                                                    <Form className=\"mrg-1-min\">\n                                                                        <FormGroup>\n                                                                            <Input className=\"pd-left\" type=\"checkbox\" ref= {subObj.from} onChange={e => this.showContent(e, subObj.from)}/>\n                                                                        </FormGroup>\n                                                                    </Form>\n                                                                </Col>\n                                                                </Row>\n                                                            <Row className=\"primary-600 sz-075 pd-05 border-left border-primary\">\n                                                                <Col><Author authorId ={subObj._from.authors}/>&nbsp; {subObj._from.created}\n                                                                </Col>\n                                                                <Col md=\"2\">\n                                                                    <Button onClick={()=>this.buildOn(subObj.from)}>BuildOn</Button>\n                                                                </Col>\n                                                            </Row></>):(<></>)}\n                                                        </Col>\n                                                    </Row>\n                                                            \n                                                })}\n                                                </Col>\n                                                </Row>\n                                            </>)\n                                            :\n                                            (<></>) }\n                                        </>)}                                    \n                                    \n                                    { obj._from && obj._from.title && obj._to.created ? \n                                        (<>\n                                            <Row>\n                                            <Col md=\"1\"></Col>\n                                            <Col>\n                                                <Row className=\"pd-05 border-left border-primary\"> \n                                                <Col className=\"primary-800 font-weight-bold\">{obj._from.title}</Col>\n                                                <Col md=\"2\">\n                                                <Form className=\"mrg-1-min\">\n                                                    <FormGroup>\n                                                        <Input className=\"pd-left\" type=\"checkbox\" ref= {obj.from} onChange={e => this.showContent(e, obj.from)}/>\n                                                    </FormGroup>\n                                                </Form>\n                                                </Col>\n                                                </Row>\n                                                <Row className=\"primary-600 sz-075 pd-05 border-left border-primary\">\n                                                    <Col><Author authorId ={obj._from.authors}/>&nbsp; {obj._from.created}</Col>\n                                                    <Col md=\"2\">\n                                                        <Button onClick={()=>this.buildOn(obj.from)}>BuildOn</Button>\n                                                    </Col>\n                                                </Row>\n                                            </Col>\n                                            </Row>\n                                        </>)\n                                        :(<>\n                                        </>)}                                     \n                                    \n                                </Col>\n                            </Row>\n                            }\n                            \n                            )}                            \n                        {this.state.viewLinks.map((obj, i) => {\n                            return <>\n                            {obj && obj._to.title?    \n                                (<>\n                                <Row key={i} value={obj.to} className=\"mrg-05-top\">\n                                    <Col className=\"primary-bg-200 rounded mrg-1-bot\">\n                                    <Row className=\"pd-05\">\n                                        <Col className=\"primary-800 font-weight-bold\"> {obj._to.title}</Col>\n                                        <Col md=\"2\">\n                                            <Form className=\"mrg-1-min pd-2-right\">\n                                                <FormGroup>\n                                                    <Input type=\"checkbox\" ref= {obj.to} onChange={e => this.showContent(e, obj.to)}/>\n                                                </FormGroup>\n                                            </Form>\n                                        </Col>\n                                        </Row>\n                                    <Row className=\"primary-600 sz-075 pd-05\">\n                                        <Col><Author authorId ={obj._to.authors}/>&nbsp; {obj._to.created}\n                                        </Col>    \n                                        <Col md=\"2\">\n                                            <Button onClick={()=>this.buildOn(obj.to)}>BuildOn</Button>\n                                        </Col>\n                                    </Row>\n                                    </Col>\n                                </Row>\n                                </>)\n                                :(<></>)\n                            }\n                            \n                            </>\n                            })}\n                        </>)\n                        :(<>\n\n                        <Row>\n                            {this.state.scaffoldsTitle &&  this.state.filter === \"scaffold\"? (\n                                <Col>\n                                    {this.state.scaffoldsTitle.map((obj, i) => {\n                                        return <Row key={i} className=\"scaffold-title\">\n                                            <Link onClick={()=>this.filterNotes(obj)} className=\"white\">{obj}</Link>\n                                        </Row>})}                                    \n                                </Col>\n                            ):null\n                            }\n                        </Row>\n\n                        {this.state.filteredData.map((obj, i) => {\n                            return <>\n                            {obj._to && obj._to.title?    \n                                (<>\n                                <Row key={i} value={obj.to} className=\"mrg-05-top\">\n                                    <Col className=\"primary-bg-200 rounded mrg-1-bot\">\n                                    <Row className=\"pd-05\">\n                                        <Col className=\"primary-800 font-weight-bold\"> {obj._to.title}</Col>\n                                        <Col md=\"2\">\n                                            <Form className=\"mrg-1-min pd-2-right\">\n                                                <FormGroup>\n                                                    <Input type=\"checkbox\" ref= {obj.to} onChange={e => this.showContent(e, obj.to)}/>\n                                                </FormGroup>\n                                            </Form>\n                                            </Col>\n                                        </Row>\n                                    <Row className=\"primary-600 sz-075 pd-05\">\n                                        <Col><Author authorId ={obj._to.authors}/>&nbsp; {obj._to.created}\n                                        </Col>\n                                        <Col md=\"2\">\n                                            <Button onClick={()=>this.buildOn(obj.to)}>BuildOn</Button>\n                                        </Col>\n                                        </Row>\n                                    </Col>\n                                </Row>\n                                </>)\n                                :(<>\n                                    {obj._id ? (<>\n                                        <Row key={i} value={obj._id} className=\"mrg-05-top\">\n                                        <Col className=\"primary-bg-200 rounded mrg-1-bot\">\n                                        <Row className=\"pd-05\">\n                                            <Col className=\"primary-800 font-weight-bold\"> {obj.title}</Col>\n                                            <Col md=\"2\">\n                                            <Form className=\"mrg-1-min pd-2-right\">\n                                                <FormGroup>\n                                                    <Input type=\"checkbox\" ref= {obj._id} onChange={e => this.showContent(e, obj._id)}/>\n                                                </FormGroup>\n                                            </Form>\n                                            </Col>\n                                            </Row>\n                                        <Row className=\"primary-600 sz-075 pd-05\">\n                                            <Col><Author authorId ={obj.authors}/>&nbsp; {obj.created}</Col>\n                                            <Col md=\"2\">\n                                                <Button onClick={()=>this.buildOn(obj._id)}>BuildOn</Button>\n                                            </Col>\n                                        </Row>\n                                        </Col>\n                                </Row>   \n                                    </>)\n                                :(<></>)}\n                                </>)\n                            }\n                            \n                            </>\n                            })}     \n\n                        </>)}                    \n                            \n                        </Col>\n                        \n                        {/* NOTE CONTENT */}\n                        {this.state.showNoteContent ? \n                        (<>\n                            <Col md=\"5\" sm=\"12\" className=\"mrg-6-top v-scroll\">\n                                <NoteContent noteContnetList = {this.state.noteContnetList} closeNote = {this.closeNote} query = {this.state.query} filter={this.state.filter}/>\n                            </Col>\n                        </>)\n                        :null\n                        }\n                        \n                    </div>\n                        \n                \n            \n            \n            {/* MODEL */}\n            <Modal show={this.state.showModel} onHide={()=>this.handleShow(false)}>\n                    {this.state.showContribution ?(\n                    <>\n                        <Modal.Header closeButton>\n                        <Modal.Title>Contributions</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body style={{'max-height': 'calc(100vh - 300px)', 'overflow-y': 'auto'}}>\n                            {this.state.hNotes.map((obj, i) => {\n                                return <Row key={i} value={obj.to} className=\"mrg-05-top\">\n                                    <Col className=\"mr-auto\">\n                                        <Row className=\"indigo\"> {obj._to.title}</Row>\n                                        <Row> {obj.to}</Row>\n                                        <Row className=\"pd-2-left blue\"> {obj._from.title}</Row>\n                                        <Row className=\"pd-2-left\"> {obj.from}</Row>\n                                        <hr/>\n                                    </Col>\n                                </Row>\n                            })}                            \n\n                            {this.state.viewLinks.map((obj, i) => {\n                            return <Row key={i} value={obj.to} className=\"mrg-05-top\">\n                                <Col>\n                                    <Row className=\"indigo\"> {obj._to.title}</Row>\n                                    <Row> {obj.to}</Row>\n                                    <hr/>\n                                </Col>\n                            </Row>\n                            })}\n                        </Modal.Body>\n                    </>) : null }\n\n                    {this.state.showView ?(\n                    <>\n                        <Modal.Header closeButton>\n                        <Modal.Title>\n                            <Row>\n                            <Col>Views</Col>\n                            </Row>\n                            <Row>\n                            <Col>\n                                <Row>\n                                <Form onSubmit={this.handleSubmitView} className=\"form\">\n                                    <Col>\n                                    <FormGroup>\n                                        <Label htmlFor=\"addView\" style={{fontSize:\"1rem\"}}>Add View</Label>\n                                        <Input type=\"text\" id=\"addView\" placeholder=\"Enter View Name\" name=\"addView\" value={this.state.addView} onChange={this.handleChangeView} />\n                                    </FormGroup>\n                                    </Col>\n                                    <Col>\n                                        <Button varient=\"secondary\" onClick={this.handleSubmitView}>Add</Button>\n                                    </Col>\n                                </Form>\n                                </Row>\n                            </Col>\n                            </Row>\n                        </Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body style={{'max-height': 'calc(100vh - 210px)', 'overflow-y': 'auto'}}>\n                            {this.state.myViews.map((obj, i) => {\n                            return <Row key={i} value={obj.title} className=\"mrg-05-top\">\n                                <Col><Link onClick={()=>this.changeView({obj})}> {obj.title} </Link></Col>\n                            </Row>\n                            })}\n                        </Modal.Body>\n                    </>) : null }\n\n                    {this.state.showRiseAbove ?(\n                    <>\n                        <Modal.Header closeButton>\n                        <Modal.Title>\n                            <Row>\n                            <Col>New RiseAbove</Col>\n                            </Row>\n                        </Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body style={{'max-height': 'calc(100vh - 210px)', 'overflow-y': 'auto'}}>\n                            <Form onSubmit={this.handleSubmit}>\n                                <Label htmlFor=\"riseAboveTitle\" style={{fontSize:\"1rem\"}}>RiseAbove Title</Label>\n                                <Input type=\"text\" id=\"riseAboveTitle\" placeholder=\"Enter RiseAbove Title\" name=\"riseAboveTitle\" value={this.state.riseAboveTitle} onChange={this.handleChange} />\n                                \n                                <Button className=\"mrg-1-top\" onClick={this.handleSubmit}>Submit</Button>\n                            </Form>\n                        </Modal.Body>\n                    </>) : null }\n\n                    {this.state.showNote ?(\n                    <>\n                        <Modal.Header closeButton>\n                        <Modal.Title>\n                            <Row>\n                            <Col>New Note</Col>\n                            </Row>\n                        </Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body style={{'max-height': 'calc(100vh - 210px)', 'overflow-y': 'auto'}}>\n                            New Note\n                        </Modal.Body>\n                    </>) : null }\n\n\n                    <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={()=>this.handleShow(false)}>\n                        Close\n                    </Button>\n                    </Modal.Footer>\n                </Modal>\n\n\n\n        </>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        communityId: state.globals.communityId,\n        viewId: state.globals.viewId,\n        view: state.globals.view,\n        author: state.globals.author\n    }\n}\n\nconst mapDispatchToProps = {\n    fetchAuthor,\n    fetchView,\n    fetchCommunity,\n    fetchAuthors,\n    setCommunityId,\n    setViewId,\n    newNote,\n    openContribution\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(View)\n","import React, {useEffect} from 'react';\nimport DialogHandler from '../dialogHandler/DialogHandler.js'\nimport {Button} from 'react-bootstrap'\nimport { useSelector, useDispatch } from 'react-redux';\nimport {newNote, openContribution} from '../../store/noteReducer.js'\nimport { fetchAuthor, fetchView, fetchCommunity} from '../../store/globalsReducer.js'\nimport { fetchAuthors } from '../../store/userReducer.js'\nconst NewNote = props => {\n\n    const communityId = useSelector((state) => state.globals.communityId)\n    const viewId = useSelector((state) => state.globals.viewId)\n    const view = useSelector((state) => state.globals.view)\n    const author = useSelector(state => state.globals.author);\n    const dispatch = useDispatch();\n    const createNewNote = () => {\n        dispatch(newNote(view, communityId, author._id))\n    };\n\n    const openNote = (contribId) => {\n        dispatch(openContribution('5ee2aefee028a1d4cfb07252'))\n    }\n\n    useEffect(() => {\n        dispatch(fetchAuthor(communityId));\n        dispatch(fetchView(viewId))\n        dispatch(fetchCommunity(communityId));\n        dispatch(fetchAuthors(communityId))\n    }, [dispatch, communityId, viewId]);\n\n    return (\n        <div style={{marginTop: '100px'}} >\n            <Button onClick={createNewNote}>New Note</Button>\n            <br />\n            <Button onClick={openNote}>Open Note</Button>\n            <DialogHandler/>\n        </div>\n    );\n}\n\nexport default NewNote;\n","import React, { Component } from 'react';\nimport Axios from 'axios';\nimport {Container, Col, Form, FormGroup, Label, Input, Button} from 'reactstrap';\nimport {apiUrl} from '../store/api.js';\n\nclass ChangePassword extends Component {\n    token= sessionStorage.getItem(\"token\");\n    constructor() {\n        super();\n\n        this.state = {\n            oldPassword: '',\n            newPassword: ''\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(e) {\n        let target = e.target;\n        let name = target.name;\n        let value = target.value;\n\n        this.setState({\n          [name]: value\n        });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        \n        console.log('The form was submitted with:');\n        console.log(this.state);\n\n        var config = {\n            headers: { Authorization: `Bearer ${this.token}` }\n        };\n\n        var changePasswdUrl= `${apiUrl}/users/${sessionStorage.getItem(\"userId\")}/password`;\n\n        //LOGIN RETURNS TOKEN\n        Axios.put(changePasswdUrl,this.state,config)\n        .then(\n            result=>{\n                alert(\"Password is Successfully changed\");\n            }).catch(\n            error=>{\n                alert(error);\n            })\n    }\n\n    render() {\n        return (\n            <Container>\n            <div className=\"mrg-8-top\">\n                <Col>\n                    <h3>Change Password</h3>\n                </Col>\n                <Form onSubmit={this.handleSubmit} className=\"form\">\n                <Col>\n                <FormGroup>\n                    <Label htmlFor=\"oldPassword\">Current Password</Label>\n                    <Input type=\"password\" id=\"oldPassword\" placeholder=\"Enter Current Password\" name=\"oldPassword\" value={this.state.oldPassword} onChange={this.handleChange} />\n                </FormGroup>\n                </Col>\n                <Col>\n                <FormGroup>\n                    <Label htmlFor=\"newPassword\">New Password</Label>\n                    <Input type=\"password\" id=\"password\" placeholder=\"Enter New Password\" name=\"newPassword\" value={this.state.newPassword} onChange={this.handleChange} />\n                </FormGroup>\n                </Col>\n                <Col className=\"mrg-1-top\">\n                    <Button>Save</Button>\n                </Col>\n                </Form>\n            </div>    \n          </Container>\n        );\n    }\n}\n\nexport default ChangePassword;","import React, {useEffect} from 'react';\nimport AttachArea from '../attachmentArea/AttachArea.js'\nimport AttachPanel from '../attachmentCollapse/AttachPanel.js'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchAuthor } from '../../store/globalsReducer.js'\nimport { fetchAuthors } from '../../store/userReducer.js'\n\nconst TestComponent= props => {\n    const note = {id: 1, title:'hola', content: 'asdf', attachments: []}\n    const communityId = useSelector((state) => state.globals.communityId)\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        console.log('use effect')\n        dispatch(fetchAuthors(communityId))\n        dispatch(fetchAuthor(communityId));\n    }, [dispatch, communityId]);\n\n    return (\n        <div style={{marginTop: '100px'}}>\n            <AttachArea note={note}></AttachArea>\n            <AttachPanel></AttachPanel>\n        </div>\n    )\n\n};\n\nexport default TestComponent;\n","import React, {useEffect} from 'react';\nimport { HashRouter as Router, Route} from 'react-router-dom';\nimport ReactNotification from 'react-notifications-component';\n\nimport Login from './Account/Login';\nimport SignUp from './Account/SignUp';\nimport CommunityManager from './CommunityManager/CommunityManager';\nimport TopNavbar from './TopNavBar/TopNavbar';\nimport View from './View/View';\nimport NewNote from './components/newNote/NewNote'\nimport ChangePassword from './Account/ChangePassword';\nimport TestComponent from './components/test/TestComponent';\nimport { setToken } from './store/api.js';\n\nimport 'react-notifications-component/dist/theme.css'\nimport './App.css';\n\nfunction App() {\n    \n    useEffect(()=> {\n        const token = sessionStorage.getItem('token');\n        if (token){\n            setToken(token)\n        }\n    })\n\n    return (\n        <div>\n            <ReactNotification />\n            <TopNavbar></TopNavbar>\n            <Router>\n                <Route exact path=\"/\" component={Login}>\n                </Route>\n                <Route path=\"/signup\" component={SignUp}>\n                </Route>\n                <Route path=\"/community-manager\" component={CommunityManager}>\n                </Route>\n                <Route path=\"/view\" component={View}>      \n                </Route>\n                <Route path=\"/new-note\" component={NewNote}>\n                </Route>\n                <Route path=\"/change-password\" component={ChangePassword}>      \n                </Route>\n                <Route path=\"/test\" component={TestComponent}>\n                </Route>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { globalsReducer } from './globalsReducer.js'\r\nimport { dialogReducer } from './dialogReducer.js'\r\nimport { noteReducer } from './noteReducer.js'\r\nimport { scaffoldReducer } from './scaffoldReducer.js'\r\nimport { userReducer } from './userReducer.js'\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n      dialogs: dialogReducer,\r\n      notes: noteReducer,\r\n      scaffolds: scaffoldReducer,\r\n      globals: globalsReducer,\r\n      users: userReducer\r\n  },\r\n    devTools: true\r\n});\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport store from './store/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\n/* ReactDOM.render(\n *   <React.StrictMode>\n *     <App />\n *   </React.StrictMode>,\n *   document.getElementById('root')\n * ); */\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}